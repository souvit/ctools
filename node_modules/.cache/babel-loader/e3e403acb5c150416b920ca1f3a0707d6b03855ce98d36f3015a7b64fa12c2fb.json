{"ast":null,"code":"import gql from 'graphql-tag';\nimport useQueryFacade from '../useQueryFacade';\nimport { useState } from 'react';\nconst query = gql`\n  query shippingMethods($id: String!, $locale: Locale!) {\n    shippingMethodsByCart(id: $id) {\n      methodId: id\n      name\n      localizedDescription(locale: $locale)\n      isDefault\n      zoneRates {\n        shippingRates {\n          isMatching\n          freeAbove {\n            centAmount\n          }\n          price {\n            centAmount\n            currencyCode\n            fractionDigits\n          }\n        }\n      }\n    }\n  }\n`;\n\n//this is the React api useQuery(query,options)\n// https://www.apollographql.com/docs/react/api/react/hooks/#function-signature\nconst useShippingMethods = ({\n  locale,\n  id\n}) => {\n  const [shippingMethods, setShippingMethods] = useState();\n  const {\n    loading,\n    error\n  } = useQueryFacade(query, {\n    variables: {\n      id,\n      locale\n    },\n    onCompleted: data => {\n      if (!data) {\n        return;\n      }\n      setShippingMethods(data.shippingMethodsByCart);\n    }\n  });\n  return {\n    shippingMethods,\n    loading,\n    error\n  };\n};\nexport default useShippingMethods;","map":{"version":3,"names":["gql","useQueryFacade","useState","query","useShippingMethods","locale","id","shippingMethods","setShippingMethods","loading","error","variables","onCompleted","data","shippingMethodsByCart"],"sources":["/Users/souvitroy/Downloads/commercetools/ctools/composition/ct/useShippingMethods.js"],"sourcesContent":["import gql from 'graphql-tag';\r\nimport useQueryFacade from '../useQueryFacade';\r\nimport { useState } from 'react';\r\nconst query = gql`\r\n  query shippingMethods($id: String!, $locale: Locale!) {\r\n    shippingMethodsByCart(id: $id) {\r\n      methodId: id\r\n      name\r\n      localizedDescription(locale: $locale)\r\n      isDefault\r\n      zoneRates {\r\n        shippingRates {\r\n          isMatching\r\n          freeAbove {\r\n            centAmount\r\n          }\r\n          price {\r\n            centAmount\r\n            currencyCode\r\n            fractionDigits\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n//this is the React api useQuery(query,options)\r\n// https://www.apollographql.com/docs/react/api/react/hooks/#function-signature\r\nconst useShippingMethods = ({ locale, id }) => {\r\n  const [shippingMethods, setShippingMethods] = useState();\r\n\r\n  const { loading, error } = useQueryFacade(query, {\r\n    variables: {\r\n      id,\r\n      locale,\r\n    },\r\n    onCompleted: (data) => {\r\n      if (!data) {\r\n        return;\r\n      }\r\n      setShippingMethods(data.shippingMethodsByCart);\r\n    },\r\n  });\r\n  return { shippingMethods, loading, error };\r\n};\r\nexport default useShippingMethods;\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,aAAa;AAC7B,OAAOC,cAAc,MAAM,mBAAmB;AAC9C,SAASC,QAAQ,QAAQ,OAAO;AAChC,MAAMC,KAAK,GAAGH,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,MAAMI,kBAAkB,GAAG,CAAC;EAAEC,MAAM;EAAEC;AAAG,CAAC,KAAK;EAC7C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGN,QAAQ,EAAE;EAExD,MAAM;IAAEO,OAAO;IAAEC;EAAM,CAAC,GAAGT,cAAc,CAACE,KAAK,EAAE;IAC/CQ,SAAS,EAAE;MACTL,EAAE;MACFD;IACF,CAAC;IACDO,WAAW,EAAGC,IAAI,IAAK;MACrB,IAAI,CAACA,IAAI,EAAE;QACT;MACF;MACAL,kBAAkB,CAACK,IAAI,CAACC,qBAAqB,CAAC;IAChD;EACF,CAAC,CAAC;EACF,OAAO;IAAEP,eAAe;IAAEE,OAAO;IAAEC;EAAM,CAAC;AAC5C,CAAC;AACD,eAAeN,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}