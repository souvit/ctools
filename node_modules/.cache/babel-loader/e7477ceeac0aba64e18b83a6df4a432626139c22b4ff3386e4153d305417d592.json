{"ast":null,"code":"// import { required, email } from 'vuelidate/lib/validators';\nimport { required, email } from '@vuelidate/validators';\nimport useVuelidate from '@vuelidate/core';\nimport ServerError from 'presentation/components/ServerError/ServerError.vue';\nimport BaseForm from 'presentation/components/BaseForm/BaseForm.vue';\nimport BaseInput from 'presentation/components/BaseInput/BaseInput.vue';\nimport { useI18n } from 'vue-i18n';\nimport translation from './LoginForm.json';\nimport useCustomerTools from 'hooks/useCustomerTools';\nimport { ref } from 'vue';\nimport useAccessRules from 'hooks/useAccessRules';\nfunction Rules() {\n  this.password = {\n    required\n  };\n  this.email = {\n    required,\n    email\n  };\n}\nexport default {\n  components: {\n    BaseForm,\n    BaseInput,\n    ServerError\n    // LoadingButton,\n  },\n\n  props: {},\n  setup() {\n    const {\n      showResetPassword\n    } = useAccessRules();\n    const {\n      t\n    } = useI18n({\n      messages: translation\n    });\n    const form = ref({\n      email: '',\n      password: ''\n    });\n    const rules = new Rules(form);\n    const v = useVuelidate(rules, form);\n    const tools = useCustomerTools();\n    const customerSignMeIn = () => tools.login(form.value.email, form.value.password);\n    const getErrorMessage = ({\n      code\n    }) => {\n      if (code === 'InvalidCredentials') {\n        return t('invalidCredentials');\n      }\n      return t('unknownError');\n    };\n    return {\n      v,\n      customerSignMeIn,\n      t,\n      getErrorMessage,\n      showResetPassword\n    };\n  }\n};","map":{"version":3,"names":["required","email","useVuelidate","ServerError","BaseForm","BaseInput","useI18n","translation","useCustomerTools","ref","useAccessRules","Rules","password","components","props","setup","showResetPassword","t","messages","form","rules","v","tools","customerSignMeIn","login","value","getErrorMessage","code"],"sources":["/Users/souvitroy/Downloads/commercetools/ctools/src/presentation/fashion/Login/LoginForm/LoginForm.js"],"sourcesContent":["// import { required, email } from 'vuelidate/lib/validators';\r\nimport { required, email } from '@vuelidate/validators';\r\nimport useVuelidate from '@vuelidate/core';\r\nimport ServerError from 'presentation/components/ServerError/ServerError.vue';\r\nimport BaseForm from 'presentation/components/BaseForm/BaseForm.vue';\r\nimport BaseInput from 'presentation/components/BaseInput/BaseInput.vue';\r\nimport { useI18n } from 'vue-i18n';\r\nimport translation from './LoginForm.json'\r\nimport useCustomerTools from 'hooks/useCustomerTools';\r\nimport { ref } from 'vue';\r\nimport useAccessRules from 'hooks/useAccessRules';\r\nfunction Rules() {\r\n  this.password = { required };\r\n  this.email = {\r\n    required,\r\n    email,\r\n  };\r\n}\r\n\r\nexport default {\r\n  components: {\r\n    BaseForm,\r\n    BaseInput,\r\n    ServerError,\r\n    // LoadingButton,\r\n  },\r\n  props: {},\r\n  setup() {\r\n    const { showResetPassword } = useAccessRules();\r\n    const { t } = useI18n({\r\n      messages: translation\r\n    });\r\n    const form = ref({\r\n      email: '',\r\n      password: '',\r\n    });\r\n    const rules = new Rules(form);\r\n    const v = useVuelidate(rules, form);\r\n\r\n    const tools = useCustomerTools();\r\n    const customerSignMeIn = () =>\r\n      tools.login(form.value.email, form.value.password);\r\n    const getErrorMessage = ({ code }) => {\r\n      if (code === 'InvalidCredentials') {\r\n        return t('invalidCredentials');\r\n      }\r\n      return t('unknownError');\r\n    };\r\n    return {\r\n      v,\r\n      customerSignMeIn,\r\n      t,\r\n      getErrorMessage,\r\n      showResetPassword,\r\n    };\r\n  },\r\n};\r\n"],"mappings":"AAAA;AACA,SAASA,QAAQ,EAAEC,KAAK,QAAQ,uBAAuB;AACvD,OAAOC,YAAY,MAAM,iBAAiB;AAC1C,OAAOC,WAAW,MAAM,qDAAqD;AAC7E,OAAOC,QAAQ,MAAM,+CAA+C;AACpE,OAAOC,SAAS,MAAM,iDAAiD;AACvE,SAASC,OAAO,QAAQ,UAAU;AAClC,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,gBAAgB,MAAM,wBAAwB;AACrD,SAASC,GAAG,QAAQ,KAAK;AACzB,OAAOC,cAAc,MAAM,sBAAsB;AACjD,SAASC,KAAK,GAAG;EACf,IAAI,CAACC,QAAQ,GAAG;IAAEZ;EAAS,CAAC;EAC5B,IAAI,CAACC,KAAK,GAAG;IACXD,QAAQ;IACRC;EACF,CAAC;AACH;AAEA,eAAe;EACbY,UAAU,EAAE;IACVT,QAAQ;IACRC,SAAS;IACTF;IACA;EACF,CAAC;;EACDW,KAAK,EAAE,CAAC,CAAC;EACTC,KAAK,GAAG;IACN,MAAM;MAAEC;IAAkB,CAAC,GAAGN,cAAc,EAAE;IAC9C,MAAM;MAAEO;IAAE,CAAC,GAAGX,OAAO,CAAC;MACpBY,QAAQ,EAAEX;IACZ,CAAC,CAAC;IACF,MAAMY,IAAI,GAAGV,GAAG,CAAC;MACfR,KAAK,EAAE,EAAE;MACTW,QAAQ,EAAE;IACZ,CAAC,CAAC;IACF,MAAMQ,KAAK,GAAG,IAAIT,KAAK,CAACQ,IAAI,CAAC;IAC7B,MAAME,CAAC,GAAGnB,YAAY,CAACkB,KAAK,EAAED,IAAI,CAAC;IAEnC,MAAMG,KAAK,GAAGd,gBAAgB,EAAE;IAChC,MAAMe,gBAAgB,GAAG,MACvBD,KAAK,CAACE,KAAK,CAACL,IAAI,CAACM,KAAK,CAACxB,KAAK,EAAEkB,IAAI,CAACM,KAAK,CAACb,QAAQ,CAAC;IACpD,MAAMc,eAAe,GAAG,CAAC;MAAEC;IAAK,CAAC,KAAK;MACpC,IAAIA,IAAI,KAAK,oBAAoB,EAAE;QACjC,OAAOV,CAAC,CAAC,oBAAoB,CAAC;MAChC;MACA,OAAOA,CAAC,CAAC,cAAc,CAAC;IAC1B,CAAC;IACD,OAAO;MACLI,CAAC;MACDE,gBAAgB;MAChBN,CAAC;MACDS,eAAe;MACfV;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}