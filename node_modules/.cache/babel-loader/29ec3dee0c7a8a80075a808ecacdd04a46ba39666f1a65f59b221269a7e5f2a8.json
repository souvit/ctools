{"ast":null,"code":"import gql from 'graphql-tag';\nimport { useState } from 'react';\nimport useQueryFacade from '../useQueryFacade';\nconst query = gql`\n  query MyOrders($limit: Int, $offset: Int) {\n    MyOrders: me {\n      orders(\n        sort: \"createdAt desc\"\n        limit: $limit\n        offset: $offset\n      ) {\n        total\n        results {\n          orderId: id\n          orderNumber\n          totalPrice {\n            centAmount\n            currencyCode\n            fractionDigits\n          }\n          createdAt\n          shipmentState\n          paymentState\n          paymentInfo {\n            payments {\n              paymentStatus {\n                interfaceCode\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nfunction useMyOrders({\n  limit,\n  offset\n}) {\n  const [orders, setOrders] = useState(null);\n  const [total, setTotal] = useState(null);\n  const {\n    loading,\n    error\n  } = useQueryFacade(query, {\n    variables: {\n      limit,\n      offset\n    },\n    onCompleted: data => {\n      if (!data) {\n        return;\n      }\n      setOrders(data.MyOrders.orders.results);\n      setTotal(data.MyOrders.orders.total);\n    }\n  });\n  return {\n    loading,\n    error,\n    orders,\n    total\n  };\n}\nexport default useMyOrders;","map":{"version":3,"names":["gql","useState","useQueryFacade","query","useMyOrders","limit","offset","orders","setOrders","total","setTotal","loading","error","variables","onCompleted","data","MyOrders","results"],"sources":["/Users/souvitroy/Downloads/commercetools/ctools/composition/ct/useMyOrders.js"],"sourcesContent":["import gql from 'graphql-tag';\r\nimport { useState } from 'react';\r\nimport useQueryFacade from '../useQueryFacade';\r\nconst query = gql`\r\n  query MyOrders($limit: Int, $offset: Int) {\r\n    MyOrders: me {\r\n      orders(\r\n        sort: \"createdAt desc\"\r\n        limit: $limit\r\n        offset: $offset\r\n      ) {\r\n        total\r\n        results {\r\n          orderId: id\r\n          orderNumber\r\n          totalPrice {\r\n            centAmount\r\n            currencyCode\r\n            fractionDigits\r\n          }\r\n          createdAt\r\n          shipmentState\r\n          paymentState\r\n          paymentInfo {\r\n            payments {\r\n              paymentStatus {\r\n                interfaceCode\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction useMyOrders({ limit, offset }) {\r\n  const [orders, setOrders] = useState(null);\r\n  const [total, setTotal] = useState(null);\r\n\r\n  const { loading, error } = useQueryFacade(query, {\r\n    variables: { limit, offset },\r\n    onCompleted: (data) => {\r\n      if (!data) {\r\n        return;\r\n      }\r\n      setOrders(data.MyOrders.orders.results);\r\n      setTotal(data.MyOrders.orders.total);\r\n    },\r\n  });\r\n\r\n  return { loading, error, orders, total };\r\n}\r\nexport default useMyOrders;\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,aAAa;AAC7B,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,cAAc,MAAM,mBAAmB;AAC9C,MAAMC,KAAK,GAAGH,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,SAASI,WAAW,CAAC;EAAEC,KAAK;EAAEC;AAAO,CAAC,EAAE;EACtC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAM;IAAEU,OAAO;IAAEC;EAAM,CAAC,GAAGV,cAAc,CAACC,KAAK,EAAE;IAC/CU,SAAS,EAAE;MAAER,KAAK;MAAEC;IAAO,CAAC;IAC5BQ,WAAW,EAAGC,IAAI,IAAK;MACrB,IAAI,CAACA,IAAI,EAAE;QACT;MACF;MACAP,SAAS,CAACO,IAAI,CAACC,QAAQ,CAACT,MAAM,CAACU,OAAO,CAAC;MACvCP,QAAQ,CAACK,IAAI,CAACC,QAAQ,CAACT,MAAM,CAACE,KAAK,CAAC;IACtC;EACF,CAAC,CAAC;EAEF,OAAO;IAAEE,OAAO;IAAEC,KAAK;IAAEL,MAAM;IAAEE;EAAM,CAAC;AAC1C;AACA,eAAeL,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}