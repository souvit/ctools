{"ast":null,"code":"import { computed, onMounted, onUnmounted, shallowRef } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport useMyOrder from 'hooks/useMyOrder';\nimport useMyOrders from 'hooks/useMyOrders';\nimport basic from './ct/useCustomerTools';\nimport { loginToken, logout as lo } from '../src/apollo/auth';\nimport { cache } from '../src/apollo';\nimport { CUSTOMER } from '../src/constants';\nimport { createReactive } from './lib';\nimport addVisibilityChangeListener from './lib';\naddVisibilityChangeListener((value => status => {\n  const currentValue = localStorage.getItem(CUSTOMER);\n  if (status) {\n    //tab/window became visible see if item changed\n    if (currentValue !== value) {\n      //item changed in other tab or window, reset\n      //  cache and reload from local storage\n      value = currentValue;\n      cache.reset();\n      cache.gc();\n      saveCustomerState(JSON.parse(localStorage.getItem(CUSTOMER)));\n    }\n  }\n  value = currentValue;\n})(localStorage.getItem(CUSTOMER)));\nconst saveCustomerState = c => {\n  customerGlobal.setValue(c);\n};\nconst createResetToken = basic.createResetToken;\nconst refreshUser = () => basic.refreshUser().then(result => saveCustomerState(result.data.me.customer));\nconst updateUser = ({\n  firstName,\n  lastName,\n  email\n}) => basic.updateUser({\n  version: customerGlobal.ref.value.version,\n  firstName,\n  lastName,\n  email\n}).then(result => {\n  saveCustomerState(result.data.updateMyCustomer);\n});\nconst li = (email, password) => basic.login(email, password).then(data => {\n  return loginToken(email, password).then(() => data);\n}).then(result => {\n  saveCustomerState(result.data.customerSignMeIn.customer);\n  //reset entire cache, customer may have specific prices\n  cache.reset();\n  return result;\n});\nconst customerGlobal = createReactive(JSON.parse(localStorage.getItem(CUSTOMER)), newValue => localStorage.setItem(CUSTOMER, JSON.stringify(newValue)));\nfunction useCustomerTools() {\n  const customer = shallowRef(customerGlobal.ref.value);\n  const unListen = {\n    fn: () => 88\n  };\n  onMounted(() => {\n    unListen.fn = customerGlobal.addListener(newValue => {\n      customer.value = newValue;\n    });\n  });\n  onUnmounted(() => unListen.fn());\n  const router = useRouter();\n  const route = useRoute();\n  const showLoggedIn = computed(() => {\n    return Boolean(customer.value);\n  });\n  const signup = form => basic.signup(form).then(data => {\n    return loginToken(form.email, form.password).then(() => data);\n  }).then(result => {\n    saveCustomerState(result.data.customerSignMeUp.customer);\n    //reset entire cache, customer may have specific prices\n    cache.reset();\n    router.push({\n      name: 'user'\n    });\n    return result;\n  });\n  const resetPassword = ({\n    token,\n    newPassword\n  }) => basic.resetPassword({\n    token,\n    newPassword\n  }).then(() => router.push({\n    name: 'login'\n  }));\n  const logout = () => {\n    lo();\n    customerGlobal.setValue(null);\n    //reset entire cache, customer may have had specific prices\n    cache.reset();\n    router.push({\n      name: 'login'\n    });\n  };\n  const login = (email, password) => li(email, password).then(() => router.push({\n    name: 'user'\n  }));\n  const returnItems = (id, version, items) => {\n    return basic.returnItems(id, version, items).then(() => {\n      cache.evict({\n        id: 'orders'\n      });\n      cache.gc();\n      router.push({\n        name: 'order',\n        params: {\n          id\n        }\n      });\n    });\n  };\n  const updateMyCustomerPassword = ({\n    currentPassword,\n    newPassword\n  }) => basic.updateMyCustomerPassword({\n    currentPassword,\n    newPassword,\n    version: customerGlobal.ref.value.version\n  }).then(result => {\n    const c = result.data.customerChangeMyPassword;\n    saveCustomerState(c);\n    return loginToken(c.email, newPassword);\n  }).then(() => router.push({\n    name: 'user'\n  }));\n  const gotoResetToken = token => router.push({\n    name: 'reset-password',\n    params: {\n      token\n    }\n  });\n  const {\n    token\n  } = route?.params || {};\n  return {\n    token,\n    login,\n    signup,\n    showLoggedIn,\n    customer,\n    updateUser,\n    logout,\n    createResetToken,\n    resetPassword,\n    useMyOrders,\n    useMyOrder,\n    returnItems,\n    gotoResetToken,\n    refreshUser,\n    updateMyCustomerPassword\n  };\n}\nexport default useCustomerTools;","map":{"version":3,"names":["computed","onMounted","onUnmounted","shallowRef","useRoute","useRouter","useMyOrder","useMyOrders","basic","loginToken","logout","lo","cache","CUSTOMER","createReactive","addVisibilityChangeListener","value","status","currentValue","localStorage","getItem","reset","gc","saveCustomerState","JSON","parse","c","customerGlobal","setValue","createResetToken","refreshUser","then","result","data","me","customer","updateUser","firstName","lastName","email","version","ref","updateMyCustomer","li","password","login","customerSignMeIn","newValue","setItem","stringify","useCustomerTools","unListen","fn","addListener","router","route","showLoggedIn","Boolean","signup","form","customerSignMeUp","push","name","resetPassword","token","newPassword","returnItems","id","items","evict","params","updateMyCustomerPassword","currentPassword","customerChangeMyPassword","gotoResetToken"],"sources":["/Users/souvitroy/Downloads/commercetools/ctools/composition/useCustomerTools.js"],"sourcesContent":["import {\r\n  computed,\r\n  onMounted,\r\n  onUnmounted,\r\n  shallowRef,\r\n} from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport useMyOrder from 'hooks/useMyOrder';\r\nimport useMyOrders from 'hooks/useMyOrders';\r\nimport basic from './ct/useCustomerTools';\r\nimport {\r\n  loginToken,\r\n  logout as lo,\r\n} from '../src/apollo/auth';\r\nimport { cache } from '../src/apollo';\r\nimport { CUSTOMER } from '../src/constants';\r\nimport { createReactive } from './lib';\r\nimport addVisibilityChangeListener from './lib';\r\n\r\naddVisibilityChangeListener(\r\n  ((value) => (status) => {\r\n    const currentValue = localStorage.getItem(CUSTOMER);\r\n    if (status) {\r\n      //tab/window became visible see if item changed\r\n      if (currentValue !== value) {\r\n        //item changed in other tab or window, reset\r\n        //  cache and reload from local storage\r\n        value = currentValue;\r\n        cache.reset();\r\n        cache.gc();\r\n        saveCustomerState(\r\n          JSON.parse(localStorage.getItem(CUSTOMER))\r\n        );\r\n      }\r\n    }\r\n\r\n    value = currentValue;\r\n  })(localStorage.getItem(CUSTOMER))\r\n);\r\n\r\nconst saveCustomerState = (c) => {\r\n  customerGlobal.setValue(c);\r\n};\r\nconst createResetToken = basic.createResetToken;\r\nconst refreshUser = () =>\r\n  basic\r\n    .refreshUser()\r\n    .then((result) =>\r\n      saveCustomerState(result.data.me.customer)\r\n    );\r\nconst updateUser = ({ firstName, lastName, email }) =>\r\n  basic\r\n    .updateUser({\r\n      version: customerGlobal.ref.value.version,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n    })\r\n    .then((result) => {\r\n      saveCustomerState(result.data.updateMyCustomer);\r\n    });\r\nconst li = (email, password) =>\r\n  basic\r\n    .login(email, password)\r\n    .then((data) => {\r\n      return loginToken(email, password).then(() => data);\r\n    })\r\n    .then((result) => {\r\n      saveCustomerState(\r\n        result.data.customerSignMeIn.customer\r\n      );\r\n      //reset entire cache, customer may have specific prices\r\n      cache.reset();\r\n      return result;\r\n    });\r\nconst customerGlobal = createReactive(\r\n  JSON.parse(localStorage.getItem(CUSTOMER)),\r\n  (newValue) =>\r\n    localStorage.setItem(CUSTOMER, JSON.stringify(newValue))\r\n);\r\nfunction useCustomerTools() {\r\n  const customer = shallowRef(customerGlobal.ref.value);\r\n  const unListen = { fn: () => 88 };\r\n  onMounted(() => {\r\n    unListen.fn = customerGlobal.addListener((newValue) => {\r\n      customer.value = newValue;\r\n    });\r\n  });\r\n  onUnmounted(() => unListen.fn());\r\n  const router = useRouter();\r\n  const route = useRoute();\r\n  const showLoggedIn = computed(() => {\r\n    return Boolean(customer.value);\r\n  });\r\n  const signup = (form) =>\r\n    basic\r\n      .signup(form)\r\n      .then((data) => {\r\n        return loginToken(form.email, form.password).then(\r\n          () => data\r\n        );\r\n      })\r\n      .then((result) => {\r\n        saveCustomerState(\r\n          result.data.customerSignMeUp.customer\r\n        );\r\n        //reset entire cache, customer may have specific prices\r\n        cache.reset();\r\n        router.push({ name: 'user' });\r\n        return result;\r\n      });\r\n  const resetPassword = ({ token, newPassword }) =>\r\n    basic.resetPassword({ token, newPassword }).then(() =>\r\n      router.push({\r\n        name: 'login',\r\n      })\r\n    );\r\n\r\n  const logout = () => {\r\n    lo();\r\n    customerGlobal.setValue(null);\r\n    //reset entire cache, customer may have had specific prices\r\n    cache.reset();\r\n    router.push({ name: 'login' });\r\n  };\r\n  const login = (email, password) =>\r\n    li(email, password).then(() =>\r\n      router.push({ name: 'user' })\r\n    );\r\n  const returnItems = (id, version, items) => {\r\n    return basic\r\n      .returnItems(id, version, items)\r\n      .then(() => {\r\n        cache.evict({ id: 'orders' });\r\n        cache.gc();\r\n        router.push({\r\n          name: 'order',\r\n          params: { id },\r\n        });\r\n      });\r\n  };\r\n  const updateMyCustomerPassword = ({\r\n    currentPassword,\r\n    newPassword,\r\n  }) =>\r\n    basic\r\n      .updateMyCustomerPassword({\r\n        currentPassword,\r\n        newPassword,\r\n        version: customerGlobal.ref.value.version,\r\n      })\r\n      .then((result) => {\r\n        const c = result.data.customerChangeMyPassword;\r\n        saveCustomerState(c);\r\n        return loginToken(c.email, newPassword);\r\n      })\r\n      .then(() => router.push({ name: 'user' }));\r\n  const gotoResetToken = (token) =>\r\n    router.push({\r\n      name: 'reset-password',\r\n      params: { token },\r\n    });\r\n  const { token } = route?.params || {};\r\n  return {\r\n    token,\r\n    login,\r\n    signup,\r\n    showLoggedIn,\r\n    customer,\r\n    updateUser,\r\n    logout,\r\n    createResetToken,\r\n    resetPassword,\r\n    useMyOrders,\r\n    useMyOrder,\r\n    returnItems,\r\n    gotoResetToken,\r\n    refreshUser,\r\n    updateMyCustomerPassword,\r\n  };\r\n}\r\nexport default useCustomerTools;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}