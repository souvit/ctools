{"ast":null,"code":"import org, { createPayment } from './ct/useCartMutation';\nimport useCurrency from './useCurrency';\nimport useLocation from './useLocation';\nimport { addLineItem, changeCartLineItemQuantity, removeLineItem, addDiscountCode, removeDiscountCode, setShippingMethod, setBillingAddress, setShippingAddress, createMyOrderFromCart } from './ct/useCartMutation';\nimport useSelectedChannel from './useSelectedChannel';\nimport { getValue } from '../src/lib';\nimport { apolloClient, cache } from '../src/apollo';\nexport { addLineItem, changeCartLineItemQuantity, removeLineItem, addDiscountCode, removeDiscountCode, setShippingMethod, setBillingAddress, setShippingAddress, createMyOrderFromCart };\nconst useCartMutation = () => {\n  const {\n    location\n  } = useLocation();\n  const currency = useCurrency();\n  return org({\n    location,\n    currency\n  });\n};\nexport default useCartMutation;\nexport const useCartActions = () => {\n  const {\n    location\n  } = useLocation();\n  const {\n    channel\n  } = useSelectedChannel();\n  const currency = useCurrency();\n  const debounce = (fn, time = 200) => {\n    const current = {};\n    const check = {\n      current\n    };\n    return (...args) => {\n      const current = {};\n      check.current = current;\n      setTimeout(() => {\n        if (check.current === current) {\n          fn(...args);\n        }\n      }, time);\n    };\n  };\n  const {\n    error,\n    mutateCart\n  } = useCartMutation();\n  const changeLine = debounce((lineItemId, quantity = 1) => {\n    if (!quantity || quantity < 0) {\n      return;\n    }\n    mutateCart(changeCartLineItemQuantity(lineItemId, quantity));\n  });\n  const remove = lineItemId => {\n    mutateCart(removeLineItem(lineItemId));\n  };\n  const addLine = (sku, quantity) => mutateCart(addLineItem(sku, quantity, channel.value?.id));\n  const applyDiscount = code => mutateCart(addDiscountCode(code));\n  const removeDiscount = codeId => mutateCart(removeDiscountCode(codeId));\n  const setShip = shippingMethodId => mutateCart(setShippingMethod(shippingMethodId));\n  const setBilling = address => mutateCart(setBillingAddress(address));\n  const setShipping = address => mutateCart(setShippingAddress(address));\n  const createMyOrder = ({\n    method,\n    payId,\n    cart\n  }) => {\n    console.log(\"ok\", method, payId);\n    return createPayment({\n      currency: currency.value,\n      centAmount: cart?.totalPrice?.centAmount,\n      method,\n      paymentInterface: payId\n    }).then(({\n      id\n    }) => mutateCart([{\n      addPayment: {\n        payment: {\n          id\n        }\n      }\n    }])).then(({\n      data\n    }) => {\n      const {\n        id,\n        version\n      } = data.updateMyCart;\n      return apolloClient.mutate(createMyOrderFromCart(id, version));\n    }).then(() => {\n      cache.evict({\n        id: 'activeCart'\n      });\n      cache.gc();\n    });\n  };\n  const setAddressForCart = ({\n    billingAddress,\n    shippingAddress\n  }) => {\n    return Promise.resolve().then(() => {\n      const actions = [setBillingAddress({\n        ...getValue(billingAddress),\n        country: location.value\n      }), setShippingAddress({\n        ...(getValue(shippingAddress) || getValue(billingAddress)),\n        country: location.value\n      })];\n      return mutateCart(actions).then(() => {\n        cache.evict({\n          id: 'activeCart'\n        });\n        cache.gc();\n      });\n    });\n  };\n  return {\n    error,\n    changeLine,\n    removeLineItem: remove,\n    applyDiscount,\n    removeDiscount,\n    addLine,\n    setShippingMethod: setShip,\n    setBillingAddress: setBilling,\n    setShippingAddress: setShipping,\n    createMyOrderFromCart: createMyOrder,\n    setAddressForCart\n  };\n};","map":{"version":3,"names":["org","createPayment","useCurrency","useLocation","addLineItem","changeCartLineItemQuantity","removeLineItem","addDiscountCode","removeDiscountCode","setShippingMethod","setBillingAddress","setShippingAddress","createMyOrderFromCart","useSelectedChannel","getValue","apolloClient","cache","useCartMutation","location","currency","useCartActions","channel","debounce","fn","time","current","check","args","setTimeout","error","mutateCart","changeLine","lineItemId","quantity","remove","addLine","sku","value","id","applyDiscount","code","removeDiscount","codeId","setShip","shippingMethodId","setBilling","address","setShipping","createMyOrder","method","payId","cart","console","log","centAmount","totalPrice","paymentInterface","then","addPayment","payment","data","version","updateMyCart","mutate","evict","gc","setAddressForCart","billingAddress","shippingAddress","Promise","resolve","actions","country"],"sources":["/Users/souvitroy/Downloads/commercetools/ctools/composition/useCartMutation.js"],"sourcesContent":["import org, { createPayment } from './ct/useCartMutation';\r\nimport useCurrency from './useCurrency';\r\nimport useLocation from './useLocation';\r\nimport {\r\n  addLineItem,\r\n  changeCartLineItemQuantity,\r\n  removeLineItem,\r\n  addDiscountCode,\r\n  removeDiscountCode,\r\n  setShippingMethod,\r\n  setBillingAddress,\r\n  setShippingAddress,\r\n  createMyOrderFromCart,\r\n} from './ct/useCartMutation';\r\nimport useSelectedChannel from './useSelectedChannel';\r\nimport { getValue } from '../src/lib';\r\nimport { apolloClient, cache } from '../src/apollo';\r\nexport {\r\n  addLineItem,\r\n  changeCartLineItemQuantity,\r\n  removeLineItem,\r\n  addDiscountCode,\r\n  removeDiscountCode,\r\n  setShippingMethod,\r\n  setBillingAddress,\r\n  setShippingAddress,\r\n  createMyOrderFromCart,\r\n};\r\nconst useCartMutation = () => {\r\n  const { location } = useLocation();\r\n  const currency = useCurrency();\r\n  return org({ location, currency });\r\n};\r\nexport default useCartMutation;\r\n\r\nexport const useCartActions = () => {\r\n  const { location } = useLocation();\r\n  const { channel } = useSelectedChannel();\r\n  const currency = useCurrency();\r\n  const debounce = (fn, time = 200) => {\r\n    const current = {};\r\n    const check = { current };\r\n    return (...args) => {\r\n      const current = {};\r\n      check.current = current;\r\n      setTimeout(() => {\r\n        if (check.current === current) {\r\n          fn(...args);\r\n        }\r\n      }, time);\r\n    };\r\n  };\r\n  const { error, mutateCart } = useCartMutation();\r\n  const changeLine = debounce(\r\n    (lineItemId, quantity = 1) => {\r\n      if (!quantity || quantity < 0) {\r\n        return;\r\n      }\r\n      mutateCart(\r\n        changeCartLineItemQuantity(lineItemId, quantity)\r\n      );\r\n    }\r\n  );\r\n  const remove = (lineItemId) => {\r\n    mutateCart(removeLineItem(lineItemId));\r\n  };\r\n  const addLine = (sku, quantity) =>\r\n    mutateCart(\r\n      addLineItem(sku, quantity, channel.value?.id)\r\n    );\r\n  const applyDiscount = (code) =>\r\n    mutateCart(addDiscountCode(code));\r\n  const removeDiscount = (codeId) =>\r\n    mutateCart(removeDiscountCode(codeId));\r\n  const setShip = (shippingMethodId) =>\r\n    mutateCart(setShippingMethod(shippingMethodId));\r\n\r\n  const setBilling = (address) =>\r\n    mutateCart(setBillingAddress(address));\r\n\r\n  const setShipping = (address) =>\r\n    mutateCart(setShippingAddress(address));\r\n\r\n  const createMyOrder = ({ method, payId, cart }) => {\r\n\r\n    console.log(\"ok\", method, payId)\r\n    return createPayment({\r\n      currency: currency.value,\r\n      centAmount: cart?.totalPrice?.centAmount,\r\n      method,\r\n      paymentInterface: payId\r\n    })\r\n      .then(({ id }) =>\r\n        mutateCart([\r\n          {\r\n            addPayment: {\r\n              payment: {\r\n                id,\r\n              },\r\n            },\r\n          },\r\n        ])\r\n      )\r\n      .then(({ data }) => {\r\n        const { id, version } = data.updateMyCart;\r\n        return apolloClient.mutate(\r\n          createMyOrderFromCart(id, version)\r\n        );\r\n      })\r\n      .then(() => {\r\n        cache.evict({ id: 'activeCart' });\r\n        cache.gc();\r\n      });\r\n  };\r\n\r\n  const setAddressForCart = ({\r\n    billingAddress,\r\n    shippingAddress,\r\n  }) => {\r\n    return Promise.resolve().then(() => {\r\n      const actions = [\r\n        setBillingAddress({\r\n          ...getValue(billingAddress),\r\n          country: location.value,\r\n        }),\r\n        setShippingAddress({\r\n          ...(getValue(shippingAddress) ||\r\n            getValue(billingAddress)),\r\n          country: location.value,\r\n        }),\r\n      ];\r\n      return mutateCart(actions).then(() => {\r\n        cache.evict({ id: 'activeCart' });\r\n        cache.gc();\r\n      });\r\n    });\r\n  };\r\n\r\n  return {\r\n    error,\r\n    changeLine,\r\n    removeLineItem: remove,\r\n    applyDiscount,\r\n    removeDiscount,\r\n    addLine,\r\n    setShippingMethod: setShip,\r\n    setBillingAddress: setBilling,\r\n    setShippingAddress: setShipping,\r\n    createMyOrderFromCart: createMyOrder,\r\n    setAddressForCart,\r\n  };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}