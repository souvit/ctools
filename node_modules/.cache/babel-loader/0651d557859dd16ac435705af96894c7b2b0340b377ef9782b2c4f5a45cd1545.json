{"ast":null,"code":"import { required } from '@vuelidate/validators';\nimport useVuelidate from '@vuelidate/core';\nimport BaseInput from 'presentation/components/BaseInput/BaseInput.vue';\nimport BaseForm from 'presentation/components/BaseForm/BaseForm.vue';\nimport ServerError from 'presentation/components/ServerError/ServerError.vue';\nimport LoadingButton from 'presentation/components/LoadingButton/LoadingButton.vue';\nimport { useI18n } from 'vue-i18n';\nimport translation from './TabChangePassword.json';\nimport { ref } from 'vue';\nimport useCustomerTools from 'hooks/useCustomerTools';\nfunction Rules(form) {\n  this.currentPassword = {\n    required\n  };\n  this.newPassword = {\n    required\n  };\n  this.newPasswordConfirm = {\n    sameAsPassword: value => value === form.value.newPassword\n  };\n}\nexport default {\n  components: {\n    BaseForm,\n    BaseInput,\n    LoadingButton,\n    ServerError\n  },\n  setup() {\n    const tools = useCustomerTools();\n    const {\n      t\n    } = useI18n({\n      messages: translation\n    });\n    const getErrorMessage = ({\n      code\n    }) => {\n      if (code === 'InvalidCurrentPassword') {\n        return t('invalidPassword');\n      }\n      return t('unknownError');\n    };\n    const form = ref({});\n    const rules = new Rules(form);\n    const v = useVuelidate(rules, form);\n    const updateCustomerPassword = () => tools.updateMyCustomerPassword(form.value).then(() => {\n      form.value = {};\n    });\n    return {\n      t,\n      getErrorMessage,\n      updateCustomerPassword,\n      v,\n      ...tools\n    };\n  }\n};","map":{"version":3,"names":["required","useVuelidate","BaseInput","BaseForm","ServerError","LoadingButton","useI18n","translation","ref","useCustomerTools","Rules","form","currentPassword","newPassword","newPasswordConfirm","sameAsPassword","value","components","setup","tools","t","messages","getErrorMessage","code","rules","v","updateCustomerPassword","updateMyCustomerPassword","then"],"sources":["/Users/souvitroy/Downloads/commercetools/ctools/src/presentation/fashion/User/TabChangePassword/TabChangePassword.js"],"sourcesContent":["import { required } from '@vuelidate/validators';\r\nimport useVuelidate from '@vuelidate/core';\r\nimport BaseInput from 'presentation/components/BaseInput/BaseInput.vue';\r\nimport BaseForm from 'presentation/components/BaseForm/BaseForm.vue';\r\nimport ServerError from 'presentation/components/ServerError/ServerError.vue';\r\nimport LoadingButton from 'presentation/components/LoadingButton/LoadingButton.vue';\r\nimport { useI18n } from 'vue-i18n';\r\nimport translation from './TabChangePassword.json'\r\nimport { ref } from 'vue';\r\nimport useCustomerTools from 'hooks/useCustomerTools';\r\nfunction Rules(form) {\r\n  this.currentPassword = { required };\r\n  this.newPassword = { required };\r\n  this.newPasswordConfirm = {\r\n    sameAsPassword: (value) =>\r\n      value === form.value.newPassword,\r\n  };\r\n}\r\n\r\nexport default {\r\n  components: {\r\n    BaseForm,\r\n    BaseInput,\r\n    LoadingButton,\r\n    ServerError,\r\n  },\r\n  setup() {\r\n    const tools = useCustomerTools();\r\n    const { t } = useI18n({\r\n      messages: translation\r\n    });\r\n    const getErrorMessage = ({ code }) => {\r\n      if (code === 'InvalidCurrentPassword') {\r\n        return t('invalidPassword');\r\n      }\r\n      return t('unknownError');\r\n    };\r\n    const form = ref({});\r\n    const rules = new Rules(form);\r\n    const v = useVuelidate(rules, form);\r\n    const updateCustomerPassword = () =>\r\n      tools\r\n        .updateMyCustomerPassword(form.value)\r\n        .then(() => {\r\n          form.value = {};\r\n        });\r\n    return {\r\n      t,\r\n      getErrorMessage,\r\n      updateCustomerPassword,\r\n      v,\r\n      ...tools,\r\n    };\r\n  },\r\n};\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,OAAOC,YAAY,MAAM,iBAAiB;AAC1C,OAAOC,SAAS,MAAM,iDAAiD;AACvE,OAAOC,QAAQ,MAAM,+CAA+C;AACpE,OAAOC,WAAW,MAAM,qDAAqD;AAC7E,OAAOC,aAAa,MAAM,yDAAyD;AACnF,SAASC,OAAO,QAAQ,UAAU;AAClC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,SAASC,GAAG,QAAQ,KAAK;AACzB,OAAOC,gBAAgB,MAAM,wBAAwB;AACrD,SAASC,KAAK,CAACC,IAAI,EAAE;EACnB,IAAI,CAACC,eAAe,GAAG;IAAEZ;EAAS,CAAC;EACnC,IAAI,CAACa,WAAW,GAAG;IAAEb;EAAS,CAAC;EAC/B,IAAI,CAACc,kBAAkB,GAAG;IACxBC,cAAc,EAAGC,KAAK,IACpBA,KAAK,KAAKL,IAAI,CAACK,KAAK,CAACH;EACzB,CAAC;AACH;AAEA,eAAe;EACbI,UAAU,EAAE;IACVd,QAAQ;IACRD,SAAS;IACTG,aAAa;IACbD;EACF,CAAC;EACDc,KAAK,GAAG;IACN,MAAMC,KAAK,GAAGV,gBAAgB,EAAE;IAChC,MAAM;MAAEW;IAAE,CAAC,GAAGd,OAAO,CAAC;MACpBe,QAAQ,EAAEd;IACZ,CAAC,CAAC;IACF,MAAMe,eAAe,GAAG,CAAC;MAAEC;IAAK,CAAC,KAAK;MACpC,IAAIA,IAAI,KAAK,wBAAwB,EAAE;QACrC,OAAOH,CAAC,CAAC,iBAAiB,CAAC;MAC7B;MACA,OAAOA,CAAC,CAAC,cAAc,CAAC;IAC1B,CAAC;IACD,MAAMT,IAAI,GAAGH,GAAG,CAAC,CAAC,CAAC,CAAC;IACpB,MAAMgB,KAAK,GAAG,IAAId,KAAK,CAACC,IAAI,CAAC;IAC7B,MAAMc,CAAC,GAAGxB,YAAY,CAACuB,KAAK,EAAEb,IAAI,CAAC;IACnC,MAAMe,sBAAsB,GAAG,MAC7BP,KAAK,CACFQ,wBAAwB,CAAChB,IAAI,CAACK,KAAK,CAAC,CACpCY,IAAI,CAAC,MAAM;MACVjB,IAAI,CAACK,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC,CAAC;IACN,OAAO;MACLI,CAAC;MACDE,eAAe;MACfI,sBAAsB;MACtBD,CAAC;MACD,GAAGN;IACL,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}