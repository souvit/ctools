{"ast":null,"code":"import { useQuery } from '@vue/apollo-composable';\nimport { computed, ref, watch } from 'vue';\nimport { getValue } from '../src/lib';\n//for some reason someone did not only thought it would\n//  be a good idea for vue useQuery to have a completely\n//  different api than React but it doesn't even fit\n//  the vue options api (skip is called enabled)\nconst useFixOptions = options => {\n  let fixed = {\n    ...options\n  };\n  const enabled = computed(() => getValue(options?.skip) ? !getValue(options.skip) : true);\n  if (options.skip) {\n    fixed = {\n      ...options,\n      enabled\n    };\n  }\n  return fixed;\n};\n//adjust React useQuery to vue apollo\nexport default ((query, {\n  variables,\n  onCompleted,\n  ...options\n}) => {\n  const newOptions = useFixOptions(options);\n  const data = ref();\n  const {\n    result,\n    loading,\n    error\n  } = useQuery(query, variables, newOptions);\n  const setData = result => {\n    if (typeof onCompleted === 'function') {\n      onCompleted(result);\n    }\n    data.value = result;\n  };\n  watch(result, setData);\n  //make hot module reloading work\n  if (getValue(result)) {\n    setData(getValue(result));\n  }\n  return {\n    data,\n    loading,\n    error\n  };\n});","map":{"version":3,"names":["useQuery","computed","ref","watch","getValue","useFixOptions","options","fixed","enabled","skip","query","variables","onCompleted","newOptions","data","result","loading","error","setData","value"],"sources":["/Users/souvitroy/Downloads/commercetools/ctools/composition/useQueryFacade.js"],"sourcesContent":["import { useQuery } from '@vue/apollo-composable';\r\nimport { computed, ref, watch } from 'vue';\r\nimport { getValue } from '../src/lib';\r\n//for some reason someone did not only thought it would\r\n//  be a good idea for vue useQuery to have a completely\r\n//  different api than React but it doesn't even fit\r\n//  the vue options api (skip is called enabled)\r\nconst useFixOptions = (options) => {\r\n  let fixed = { ...options };\r\n  const enabled = computed(() =>\r\n    getValue(options?.skip) ? !getValue(options.skip) : true\r\n  );\r\n  if (options.skip) {\r\n    fixed = { ...options, enabled };\r\n  }\r\n  return fixed;\r\n};\r\n//adjust React useQuery to vue apollo\r\nexport default (\r\n  query,\r\n  { variables, onCompleted, ...options }\r\n) => {\r\n  const newOptions = useFixOptions(options);\r\n  const data = ref();\r\n  const { result, loading, error } = useQuery(\r\n    query,\r\n    variables,\r\n    newOptions\r\n  );\r\n  const setData = (result) => {\r\n    if (typeof onCompleted === 'function') {\r\n      onCompleted(result);\r\n    }\r\n    data.value = result;\r\n  };\r\n  watch(result, setData);\r\n  //make hot module reloading work\r\n  if (getValue(result)) {\r\n    setData(getValue(result));\r\n  }\r\n  return { data, loading, error };\r\n};\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,QAAQ,KAAK;AAC1C,SAASC,QAAQ,QAAQ,YAAY;AACrC;AACA;AACA;AACA;AACA,MAAMC,aAAa,GAAIC,OAAO,IAAK;EACjC,IAAIC,KAAK,GAAG;IAAE,GAAGD;EAAQ,CAAC;EAC1B,MAAME,OAAO,GAAGP,QAAQ,CAAC,MACvBG,QAAQ,CAACE,OAAO,EAAEG,IAAI,CAAC,GAAG,CAACL,QAAQ,CAACE,OAAO,CAACG,IAAI,CAAC,GAAG,IAAI,CACzD;EACD,IAAIH,OAAO,CAACG,IAAI,EAAE;IAChBF,KAAK,GAAG;MAAE,GAAGD,OAAO;MAAEE;IAAQ,CAAC;EACjC;EACA,OAAOD,KAAK;AACd,CAAC;AACD;AACA,gBAAe,CACbG,KAAK,EACL;EAAEC,SAAS;EAAEC,WAAW;EAAE,GAAGN;AAAQ,CAAC,KACnC;EACH,MAAMO,UAAU,GAAGR,aAAa,CAACC,OAAO,CAAC;EACzC,MAAMQ,IAAI,GAAGZ,GAAG,EAAE;EAClB,MAAM;IAAEa,MAAM;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGjB,QAAQ,CACzCU,KAAK,EACLC,SAAS,EACTE,UAAU,CACX;EACD,MAAMK,OAAO,GAAIH,MAAM,IAAK;IAC1B,IAAI,OAAOH,WAAW,KAAK,UAAU,EAAE;MACrCA,WAAW,CAACG,MAAM,CAAC;IACrB;IACAD,IAAI,CAACK,KAAK,GAAGJ,MAAM;EACrB,CAAC;EACDZ,KAAK,CAACY,MAAM,EAAEG,OAAO,CAAC;EACtB;EACA,IAAId,QAAQ,CAACW,MAAM,CAAC,EAAE;IACpBG,OAAO,CAACd,QAAQ,CAACW,MAAM,CAAC,CAAC;EAC3B;EACA,OAAO;IAAED,IAAI;IAAEE,OAAO;IAAEC;EAAM,CAAC;AACjC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}