import Client from "../client";
import Service from "../service";
import { AssignTerminalsRequest, AssignTerminalsResponse, FindTerminalRequest, FindTerminalResponse, GetStoresUnderAccountRequest, GetStoresUnderAccountResponse, GetTerminalDetailsRequest, GetTerminalDetailsResponse, GetTerminalsUnderAccountRequest, GetTerminalsUnderAccountResponse } from "../typings/terminalManagement/models";
declare class TerminalManagement extends Service {
    private readonly _assignTerminals;
    private readonly _findTerminal;
    private readonly _getStoresUnderAccount;
    private readonly _getTerminalDetails;
    private readonly _getTerminalsUnderAccount;
    constructor(client: Client);
    assignTerminals(request: AssignTerminalsRequest): Promise<AssignTerminalsResponse>;
    findTerminal(request: FindTerminalRequest): Promise<FindTerminalResponse>;
    getStoresUnderAccount(request: GetStoresUnderAccountRequest): Promise<GetStoresUnderAccountResponse>;
    getTerminalDetails(request: GetTerminalDetailsRequest): Promise<GetTerminalDetailsResponse>;
    getTerminalsUnderAccount(request: GetTerminalsUnderAccountRequest): Promise<GetTerminalsUnderAccountResponse>;
}
export default TerminalManagement;
