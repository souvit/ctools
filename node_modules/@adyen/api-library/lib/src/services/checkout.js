"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const apiKeyAuthenticatedService_1 = __importDefault(require("../apiKeyAuthenticatedService"));
const getJsonResponse_1 = __importDefault(require("../helpers/getJsonResponse"));
const checkoutResource_1 = __importDefault(require("./resource/checkoutResource"));
const setApplicationInfo_1 = __importDefault(require("../helpers/setApplicationInfo"));
const models_1 = require("../typings/checkout/models");
class Checkout extends apiKeyAuthenticatedService_1.default {
    constructor(client) {
        super(client);
        this._payments = new checkoutResource_1.default(this, "/payments");
        this._paymentMethods = new checkoutResource_1.default(this, "/paymentMethods");
        this._paymentsDetails = new checkoutResource_1.default(this, "/payments/details");
        this._paymentSession = new checkoutResource_1.default(this, "/paymentSession");
        this._paymentsResult = new checkoutResource_1.default(this, "/payments/result");
        this._paymentLinks = new checkoutResource_1.default(this, "/paymentLinks");
        this._originKeys = new checkoutResource_1.default(this, "/originKeys");
        this._paymentMethodsBalance = new checkoutResource_1.default(this, "/paymentMethods/balance");
        this._orders = new checkoutResource_1.default(this, "/orders");
        this._ordersCancel = new checkoutResource_1.default(this, "/orders/cancel");
        this._sessions = new checkoutResource_1.default(this, "/sessions");
        this._donations = new checkoutResource_1.default(this, "/donations");
        this._cardDetails = new checkoutResource_1.default(this, "/cardDetails");
        this._cancelsStandalone = new checkoutResource_1.default(this, "/cancels");
        this._applePaySessions = new checkoutResource_1.default(this, "/applePay/sessions");
        this._getStoredPaymentMethods = new checkoutResource_1.default(this, "/storedPaymentMethods");
    }
    // Payments
    async sessions(checkoutSessionRequest, requestOptions) {
        const response = await (0, getJsonResponse_1.default)(this._sessions, checkoutSessionRequest, requestOptions);
        return models_1.ObjectSerializer.deserialize(response, "CreateCheckoutSessionResponse");
    }
    async paymentMethods(paymentMethodsRequest, requestOptions) {
        const response = await (0, getJsonResponse_1.default)(this._paymentMethods, paymentMethodsRequest, requestOptions);
        return models_1.ObjectSerializer.deserialize(response, "PaymentMethodsResponse");
    }
    async payments(paymentsRequest, requestOptions) {
        const response = await (0, getJsonResponse_1.default)(this._payments, (0, setApplicationInfo_1.default)(paymentsRequest), requestOptions);
        return models_1.ObjectSerializer.deserialize(response, "PaymentResponse");
    }
    async paymentsDetails(paymentsDetailsRequest, requestOptions) {
        const response = await (0, getJsonResponse_1.default)(this._paymentsDetails, paymentsDetailsRequest, requestOptions);
        return models_1.ObjectSerializer.deserialize(response, "PaymentResponse");
    }
    async donations(donationRequest, requestOptions) {
        const response = await (0, getJsonResponse_1.default)(this._donations, donationRequest, requestOptions);
        return models_1.ObjectSerializer.deserialize(response, "DonationResponse");
    }
    async cardDetails(cardDetailsRequest, requestOptions) {
        const response = await (0, getJsonResponse_1.default)(this._cardDetails, cardDetailsRequest, requestOptions);
        return models_1.ObjectSerializer.deserialize(response, "CardDetailsResponse");
    }
    // Payment Links
    async paymentLinks(paymentLinkRequest, requestOptions) {
        const response = await (0, getJsonResponse_1.default)(this._paymentLinks, paymentLinkRequest, requestOptions);
        return models_1.ObjectSerializer.deserialize(response, "PaymentLinkResponse");
    }
    async getPaymentLinks(linkId, requestOptions) {
        const paymentLinksId = new checkoutResource_1.default(this, `/paymentLinks/${linkId}`);
        const response = await (0, getJsonResponse_1.default)(paymentLinksId, {}, { ...{ method: "GET" }, ...requestOptions });
        return models_1.ObjectSerializer.deserialize(response, "PaymentLinkResponse");
    }
    async updatePaymentLinks(linkId, status, requestOptions) {
        const paymentLinksId = new checkoutResource_1.default(this, `/paymentLinks/${linkId}`);
        const response = await (0, getJsonResponse_1.default)(paymentLinksId, { status }, { ...{ method: "PATCH" }, ...requestOptions });
        return models_1.ObjectSerializer.deserialize(response, "PaymentLinkResponse");
    }
    // Modifications
    async amountUpdates(paymentPspReference, amountUpdatesRequest, requestOptions) {
        const amountUpdates = new checkoutResource_1.default(this, `/payments/${paymentPspReference}/amountUpdates`);
        const response = await (0, getJsonResponse_1.default)(amountUpdates, amountUpdatesRequest, requestOptions);
        return models_1.ObjectSerializer.deserialize(response, "PaymentAmountUpdateResource");
    }
    async cancelsStandalone(cancelsStandaloneRequest, requestOptions) {
        const response = await (0, getJsonResponse_1.default)(this._cancelsStandalone, cancelsStandaloneRequest, requestOptions);
        return models_1.ObjectSerializer.deserialize(response, "StandalonePaymentCancelResource");
    }
    async cancels(paymentPspReference, cancelsRequest, requestOptions) {
        const cancels = new checkoutResource_1.default(this, `/payments/${paymentPspReference}/cancels`);
        const response = await (0, getJsonResponse_1.default)(cancels, cancelsRequest, requestOptions);
        return models_1.ObjectSerializer.deserialize(response, "PaymentCancelResource");
    }
    async captures(paymentPspReference, capturesRequest, requestOptions) {
        const captures = new checkoutResource_1.default(this, `/payments/${paymentPspReference}/captures`);
        const response = await (0, getJsonResponse_1.default)(captures, capturesRequest, requestOptions);
        return models_1.ObjectSerializer.deserialize(response, "PaymentCaptureResource");
    }
    async refunds(paymentPspReference, refundsRequest, requestOptions) {
        const refunds = new checkoutResource_1.default(this, `/payments/${paymentPspReference}/refunds`);
        const response = await (0, getJsonResponse_1.default)(refunds, refundsRequest, requestOptions);
        return models_1.ObjectSerializer.deserialize(response, "PaymentRefundResource");
    }
    async reversals(paymentPspReference, reversalsRequest, requestOptions) {
        const refunds = new checkoutResource_1.default(this, `/payments/${paymentPspReference}/reversals`);
        const response = await (0, getJsonResponse_1.default)(refunds, reversalsRequest, requestOptions);
        return models_1.ObjectSerializer.deserialize(response, "PaymentReversalResource");
    }
    // Orders
    async paymentMethodsBalance(paymentMethodsBalanceRequest, requestOptions) {
        const response = await (0, getJsonResponse_1.default)(this._paymentMethodsBalance, paymentMethodsBalanceRequest, requestOptions);
        return models_1.ObjectSerializer.deserialize(response, "CheckoutBalanceCheckResponse");
    }
    async orders(ordersRequest, requestOptions) {
        const response = await (0, getJsonResponse_1.default)(this._orders, ordersRequest, requestOptions);
        return models_1.ObjectSerializer.deserialize(response, "CheckoutCreateOrderResponse");
    }
    async ordersCancel(ordersCancelRequest, requestOptions) {
        const response = await (0, getJsonResponse_1.default)(this._ordersCancel, ordersCancelRequest, requestOptions);
        return models_1.ObjectSerializer.deserialize(response, "CheckoutCancelOrderResponse");
    }
    // Classic Checkout SDK
    async paymentSession(paymentSessionRequest, requestOptions) {
        const response = await (0, getJsonResponse_1.default)(this._paymentSession, paymentSessionRequest, requestOptions);
        return models_1.ObjectSerializer.deserialize(response, "PaymentSetupResponse");
    }
    async paymentResult(paymentResultRequest, requestOptions) {
        const response = await (0, getJsonResponse_1.default)(this._paymentsResult, paymentResultRequest, requestOptions);
        return models_1.ObjectSerializer.deserialize(response, "PaymentVerificationResponse");
    }
    //Utility
    /**
     * @deprecated Deprecated in version 67
     */
    async originKeys(originKeysRequest, requestOptions) {
        const response = await (0, getJsonResponse_1.default)(this._originKeys, originKeysRequest, requestOptions);
        return models_1.ObjectSerializer.deserialize(response, "CheckoutUtilityResponse");
    }
    async applePaySessions(applePaySessionRequest, requestOptions) {
        const response = await (0, getJsonResponse_1.default)(this._applePaySessions, applePaySessionRequest, requestOptions);
        return models_1.ObjectSerializer.deserialize(response, "ApplePaySessionResponse");
    }
    //Recurring
    async getStoredPaymentMethods(requestOptions) {
        const response = await (0, getJsonResponse_1.default)(this._getStoredPaymentMethods, {}, { ...{ method: "GET" }, ...requestOptions });
        return models_1.ObjectSerializer.deserialize(response, "ListStoredPaymentMethodsResponse");
    }
    async deleteStoredPaymentMethod(recurringId, requestOptions) {
        const deleteStoredPaymentMethod = new checkoutResource_1.default(this, `/storedPaymentMethods/${recurringId}`);
        const response = await (0, getJsonResponse_1.default)(deleteStoredPaymentMethod, {}, { ...{ method: "DELETE" }, ...requestOptions });
        return models_1.ObjectSerializer.deserialize(response, "StoredPaymentMethodResource");
    }
}
exports.default = Checkout;
//# sourceMappingURL=checkout.js.map