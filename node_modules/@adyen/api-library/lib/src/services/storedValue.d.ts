import Client from "../client";
import Service from "../service";
import { StoredValueBalanceCheckRequest, StoredValueBalanceCheckResponse, StoredValueBalanceMergeRequest, StoredValueBalanceMergeResponse, StoredValueIssueRequest, StoredValueIssueResponse, StoredValueLoadRequest, StoredValueLoadResponse, StoredValueStatusChangeRequest, StoredValueStatusChangeResponse, StoredValueVoidRequest, StoredValueVoidResponse } from "../typings/storedValue/models";
declare class StoredValue extends Service {
    private readonly _issue;
    private readonly _changeStatus;
    private readonly _load;
    private readonly _checkBalance;
    private readonly _mergebalance;
    private readonly _voidTransaction;
    constructor(client: Client);
    issue(request: StoredValueIssueRequest): Promise<StoredValueIssueResponse>;
    changeStatus(request: StoredValueStatusChangeRequest): Promise<StoredValueStatusChangeResponse>;
    load(request: StoredValueLoadRequest): Promise<StoredValueLoadResponse>;
    checkBalance(request: StoredValueBalanceCheckRequest): Promise<StoredValueBalanceCheckResponse>;
    mergebalance(request: StoredValueBalanceMergeRequest): Promise<StoredValueBalanceMergeResponse>;
    voidTransaction(request: StoredValueVoidRequest): Promise<StoredValueVoidResponse>;
}
export default StoredValue;
