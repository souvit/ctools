"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const apiKeyAuthenticatedService_1 = __importDefault(require("../apiKeyAuthenticatedService"));
const getJsonResponse_1 = __importDefault(require("../helpers/getJsonResponse"));
const authorise_1 = __importDefault(require("./resource/payment/authorise"));
const authorise3d_1 = __importDefault(require("./resource/payment/authorise3d"));
const authorise3ds2_1 = __importDefault(require("./resource/payment/authorise3ds2"));
const getAuthenticationResult_1 = __importDefault(require("./resource/payment/getAuthenticationResult"));
const retrieve3ds2Result_1 = __importDefault(require("./resource/payment/retrieve3ds2Result"));
const capture_1 = __importDefault(require("./resource/payment/capture"));
const cancel_1 = __importDefault(require("./resource/payment/cancel"));
const refund_1 = __importDefault(require("./resource/payment/refund"));
const cancelOrRefund_1 = __importDefault(require("./resource/payment/cancelOrRefund"));
const technicalCancel_1 = __importDefault(require("./resource/payment/technicalCancel"));
const adjustAuthorisation_1 = __importDefault(require("./resource/payment/adjustAuthorisation"));
const donate_1 = __importDefault(require("./resource/payment/donate"));
const voidPendingRefund_1 = __importDefault(require("./resource/payment/voidPendingRefund"));
class ClassicIntegration extends apiKeyAuthenticatedService_1.default {
    constructor(client) {
        super(client);
        this._authorise = new authorise_1.default(this);
        this._authorise3d = new authorise3d_1.default(this);
        this._authorise3ds2 = new authorise3ds2_1.default(this);
        this._getAuthenticationResult = new getAuthenticationResult_1.default(this);
        this._retrieve3ds2Result = new retrieve3ds2Result_1.default(this);
        this._capture = new capture_1.default(this);
        this._cancel = new cancel_1.default(this);
        this._refund = new refund_1.default(this);
        this._cancelOrRefund = new cancelOrRefund_1.default(this);
        this._technicalCancel = new technicalCancel_1.default(this);
        this._adjustAuthorisation = new adjustAuthorisation_1.default(this);
        this._donate = new donate_1.default(this);
        this._voidPendingRefund = new voidPendingRefund_1.default(this);
    }
    // General
    authorise(paymentRequest) {
        return (0, getJsonResponse_1.default)(this._authorise, paymentRequest);
    }
    authorise3d(paymentRequest3d) {
        return (0, getJsonResponse_1.default)(this._authorise3d, paymentRequest3d);
    }
    authorise3ds2(paymentRequest3ds2) {
        return (0, getJsonResponse_1.default)(this._authorise3ds2, paymentRequest3ds2);
    }
    getAuthenticationResult(authenticationResultRequest) {
        return (0, getJsonResponse_1.default)(this._getAuthenticationResult, authenticationResultRequest);
    }
    retrieve3ds2Result(threeDs2ResultRequest) {
        return (0, getJsonResponse_1.default)(this._retrieve3ds2Result, threeDs2ResultRequest);
    }
    // Modifications
    capture(captureRequest) {
        return (0, getJsonResponse_1.default)(this._capture, captureRequest);
    }
    cancel(cancelRequest) {
        return (0, getJsonResponse_1.default)(this._cancel, cancelRequest);
    }
    refund(refundRequest) {
        return (0, getJsonResponse_1.default)(this._refund, refundRequest);
    }
    cancelOrRefund(cancelOrRefundRequest) {
        return (0, getJsonResponse_1.default)(this._cancelOrRefund, cancelOrRefundRequest);
    }
    technicalCancel(technicalCancelRequest) {
        return (0, getJsonResponse_1.default)(this._technicalCancel, technicalCancelRequest);
    }
    adjustAuthorisation(adjustAuthorisationRequest) {
        return (0, getJsonResponse_1.default)(this._adjustAuthorisation, adjustAuthorisationRequest);
    }
    donate(donationRequest) {
        return (0, getJsonResponse_1.default)(this._donate, donationRequest);
    }
    voidPendingRefund(voidPendingRefundRequest) {
        return (0, getJsonResponse_1.default)(this._voidPendingRefund, voidPendingRefundRequest);
    }
}
exports.default = ClassicIntegration;
//# sourceMappingURL=classicIntegration.js.map