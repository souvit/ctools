"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const service_1 = __importDefault(require("../service"));
// Deprecated classes
const meApi_1 = __importDefault(require("./management/meApi"));
const merchantAccount_1 = __importDefault(require("./management/merchantAccount"));
const merchantAllowedOrigins_1 = __importDefault(require("./management/merchantAllowedOrigins"));
const merchantApiCredentials_1 = __importDefault(require("./management/merchantApiCredentials"));
const merchantApiKey_1 = __importDefault(require("./management/merchantApiKey"));
const merchantClientKey_1 = __importDefault(require("./management/merchantClientKey"));
const merchantPaymentMethods_1 = __importDefault(require("./management/merchantPaymentMethods"));
const merchantPayoutSettings_1 = __importDefault(require("./management/merchantPayoutSettings"));
const merchantTerminalOrders_1 = __importDefault(require("./management/merchantTerminalOrders"));
const merchantTerminalSettings_1 = __importDefault(require("./management/merchantTerminalSettings"));
const merchantUsers_1 = __importDefault(require("./management/merchantUsers"));
const merchantWebhooks_1 = __importDefault(require("./management/merchantWebhooks"));
// Recommended classes
const aPICredentialsCompanyLevelApi_1 = __importDefault(require("./management/aPICredentialsCompanyLevelApi"));
const aPICredentialsMerchantLevelApi_1 = __importDefault(require("./management/aPICredentialsMerchantLevelApi"));
const aPIKeyCompanyLevelApi_1 = __importDefault(require("./management/aPIKeyCompanyLevelApi"));
const aPIKeyMerchantLevelApi_1 = __importDefault(require("./management/aPIKeyMerchantLevelApi"));
const accountCompanyLevelApi_1 = __importDefault(require("./management/accountCompanyLevelApi"));
const accountMerchantLevelApi_1 = __importDefault(require("./management/accountMerchantLevelApi"));
const accountStoreLevelApi_1 = __importDefault(require("./management/accountStoreLevelApi"));
const allowedOriginsCompanyLevelApi_1 = __importDefault(require("./management/allowedOriginsCompanyLevelApi"));
const allowedOriginsMerchantLevelApi_1 = __importDefault(require("./management/allowedOriginsMerchantLevelApi"));
const clientKeyCompanyLevelApi_1 = __importDefault(require("./management/clientKeyCompanyLevelApi"));
const clientKeyMerchantLevelApi_1 = __importDefault(require("./management/clientKeyMerchantLevelApi"));
const myAPICredentialApi_1 = __importDefault(require("./management/myAPICredentialApi"));
const paymentMethodsMerchantLevelApi_1 = __importDefault(require("./management/paymentMethodsMerchantLevelApi"));
const payoutSettingsMerchantLevelApi_1 = __importDefault(require("./management/payoutSettingsMerchantLevelApi"));
const terminalActionsCompanyLevelApi_1 = __importDefault(require("./management/terminalActionsCompanyLevelApi"));
const terminalActionsTerminalLevelApi_1 = __importDefault(require("./management/terminalActionsTerminalLevelApi"));
const terminalOrdersCompanyLevelApi_1 = __importDefault(require("./management/terminalOrdersCompanyLevelApi"));
const terminalOrdersMerchantLevelApi_1 = __importDefault(require("./management/terminalOrdersMerchantLevelApi"));
const terminalSettingsCompanyLevelApi_1 = __importDefault(require("./management/terminalSettingsCompanyLevelApi"));
const terminalSettingsMerchantLevelApi_1 = __importDefault(require("./management/terminalSettingsMerchantLevelApi"));
const terminalSettingsStoreLevelApi_1 = __importDefault(require("./management/terminalSettingsStoreLevelApi"));
const terminalSettingsTerminalLevelApi_1 = __importDefault(require("./management/terminalSettingsTerminalLevelApi"));
const terminalsTerminalLevelApi_1 = __importDefault(require("./management/terminalsTerminalLevelApi"));
const usersCompanyLevelApi_1 = __importDefault(require("./management/usersCompanyLevelApi"));
const usersMerchantLevelApi_1 = __importDefault(require("./management/usersMerchantLevelApi"));
const webhooksCompanyLevelApi_1 = __importDefault(require("./management/webhooksCompanyLevelApi"));
const webhooksMerchantLevelApi_1 = __importDefault(require("./management/webhooksMerchantLevelApi"));
class Management extends service_1.default {
    constructor(client) {
        super(client);
    }
    /**
     * @deprecated
     */
    get Me() {
        const meApi = new meApi_1.default(this.client);
        return meApi.Me;
    }
    /**
     * @deprecated
     */
    get MerchantAccount() {
        return new merchantAccount_1.default(this.client);
    }
    /**
     * @deprecated
     */
    get MerchantAllowedOrigins() {
        return new merchantAllowedOrigins_1.default(this.client);
    }
    /**
     * @deprecated
     */
    get MerchantApiCredentials() {
        return new merchantApiCredentials_1.default(this.client);
    }
    /**
     * @deprecated
     */
    get MerchantApiKey() {
        return new merchantApiKey_1.default(this.client);
    }
    /**
     * @deprecated
     */
    get MerchantClientKey() {
        return new merchantClientKey_1.default(this.client);
    }
    /**
     * @deprecated
     */
    get MerchantPaymentMethods() {
        return new merchantPaymentMethods_1.default(this.client);
    }
    /**
     * @deprecated
     */
    get MerchantPayoutSettings() {
        return new merchantPayoutSettings_1.default(this.client);
    }
    /**
     * @deprecated
     */
    get MerchantTerminalOrders() {
        return new merchantTerminalOrders_1.default(this.client);
    }
    /**
     * @deprecated
     */
    get MerchantTerminalSettings() {
        return new merchantTerminalSettings_1.default(this.client);
    }
    /**
     * @deprecated
     */
    get MerchantUsers() {
        return new merchantUsers_1.default(this.client);
    }
    /**
     * @deprecated
     */
    get MerchantWebhooks() {
        return new merchantWebhooks_1.default(this.client);
    }
    // ## Recommended classes
    get APICredentialsCompanyLevelApi() {
        return new aPICredentialsCompanyLevelApi_1.default(this.client);
    }
    get APICredentialsMerchantLevelApi() {
        return new aPICredentialsMerchantLevelApi_1.default(this.client);
    }
    get APIKeyCompanyLevelApi() {
        return new aPIKeyCompanyLevelApi_1.default(this.client);
    }
    get APIKeyMerchantLevelApi() {
        return new aPIKeyMerchantLevelApi_1.default(this.client);
    }
    get AccountCompanyLevelApi() {
        return new accountCompanyLevelApi_1.default(this.client);
    }
    get AccountMerchantLevelApi() {
        return new accountMerchantLevelApi_1.default(this.client);
    }
    get AccountStoreLevelApi() {
        return new accountStoreLevelApi_1.default(this.client);
    }
    get AllowedOriginsCompanyLevelApi() {
        return new allowedOriginsCompanyLevelApi_1.default(this.client);
    }
    get AllowedOriginsMerchantLevelApi() {
        return new allowedOriginsMerchantLevelApi_1.default(this.client);
    }
    get ClientKeyCompanyLevelApi() {
        return new clientKeyCompanyLevelApi_1.default(this.client);
    }
    get ClientKeyMerchantLevelApi() {
        return new clientKeyMerchantLevelApi_1.default(this.client);
    }
    get MyAPICredentialApi() {
        return new myAPICredentialApi_1.default(this.client);
    }
    get PaymentMethodsMerchantLevelApi() {
        return new paymentMethodsMerchantLevelApi_1.default(this.client);
    }
    get PayoutSettingsMerchantLevelApi() {
        return new payoutSettingsMerchantLevelApi_1.default(this.client);
    }
    get TerminalActionsCompanyLevelApi() {
        return new terminalActionsCompanyLevelApi_1.default(this.client);
    }
    get TerminalActionsTerminalLevelApi() {
        return new terminalActionsTerminalLevelApi_1.default(this.client);
    }
    get TerminalOrdersCompanyLevelApi() {
        return new terminalOrdersCompanyLevelApi_1.default(this.client);
    }
    get TerminalOrdersMerchantLevelApi() {
        return new terminalOrdersMerchantLevelApi_1.default(this.client);
    }
    get TerminalSettingsCompanyLevelApi() {
        return new terminalSettingsCompanyLevelApi_1.default(this.client);
    }
    get TerminalSettingsMerchantLevelApi() {
        return new terminalSettingsMerchantLevelApi_1.default(this.client);
    }
    get TerminalSettingsStoreLevelApi() {
        return new terminalSettingsStoreLevelApi_1.default(this.client);
    }
    get TerminalSettingsTerminalLevelApi() {
        return new terminalSettingsTerminalLevelApi_1.default(this.client);
    }
    get TerminalsTerminalLevelApi() {
        return new terminalsTerminalLevelApi_1.default(this.client);
    }
    get UsersCompanyLevelApi() {
        return new usersCompanyLevelApi_1.default(this.client);
    }
    get UsersMerchantLevelApi() {
        return new usersMerchantLevelApi_1.default(this.client);
    }
    get WebhooksCompanyLevelApi() {
        return new webhooksCompanyLevelApi_1.default(this.client);
    }
    get WebhooksMerchantLevelApi() {
        return new webhooksMerchantLevelApi_1.default(this.client);
    }
}
exports.default = Management;
//# sourceMappingURL=management.js.map