"use strict";
/*
 * The version of the OpenAPI document: v1
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const getJsonResponse_1 = __importDefault(require("../../helpers/getJsonResponse"));
const service_1 = __importDefault(require("../../service"));
const managementResource_1 = __importDefault(require("../resource/management/managementResource"));
const models_1 = require("../../typings/management/models");
class APICredentialsMerchantLevelApi extends service_1.default {
    /**
     * @summary Get a list of API credentials
     * @param merchantId The unique identifier of the merchant account.
     * @param pageNumber The number of the page to fetch.
     * @param pageSize The number of items to have on a page, maximum 100. The default is 10 items on a page.
     */
    async listApiCredentials(merchantId, requestOptions) {
        const localVarPath = "/merchants/{merchantId}/apiCredentials"
            .replace('{' + 'merchantId' + '}', encodeURIComponent(String(merchantId)));
        const resource = new managementResource_1.default(this, localVarPath);
        const response = await (0, getJsonResponse_1.default)(resource, "", { ...requestOptions, method: "GET" });
        return models_1.ObjectSerializer.deserialize(response, "ListMerchantApiCredentialsResponse");
    }
    /**
     * @summary Get an API credential
     * @param merchantId The unique identifier of the merchant account.
     * @param apiCredentialId Unique identifier of the API credential.
     */
    async getApiCredential(merchantId, apiCredentialId, requestOptions) {
        const localVarPath = "/merchants/{merchantId}/apiCredentials/{apiCredentialId}"
            .replace('{' + 'merchantId' + '}', encodeURIComponent(String(merchantId)))
            .replace('{' + 'apiCredentialId' + '}', encodeURIComponent(String(apiCredentialId)));
        const resource = new managementResource_1.default(this, localVarPath);
        const response = await (0, getJsonResponse_1.default)(resource, "", { ...requestOptions, method: "GET" });
        return models_1.ObjectSerializer.deserialize(response, "ApiCredential");
    }
    /**
     * @summary Update an API credential
     * @param merchantId The unique identifier of the merchant account.
     * @param apiCredentialId Unique identifier of the API credential.
     * @param updateMerchantApiCredentialRequest
     */
    async updateApiCredential(merchantId, apiCredentialId, updateMerchantApiCredentialRequest, requestOptions) {
        const localVarPath = "/merchants/{merchantId}/apiCredentials/{apiCredentialId}"
            .replace('{' + 'merchantId' + '}', encodeURIComponent(String(merchantId)))
            .replace('{' + 'apiCredentialId' + '}', encodeURIComponent(String(apiCredentialId)));
        const resource = new managementResource_1.default(this, localVarPath);
        const request = models_1.ObjectSerializer.serialize(updateMerchantApiCredentialRequest, "UpdateMerchantApiCredentialRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "PATCH" });
        return models_1.ObjectSerializer.deserialize(response, "ApiCredential");
    }
    /**
     * @summary Create an API credential
     * @param merchantId The unique identifier of the merchant account.
     * @param createMerchantApiCredentialRequest
     */
    async createApiCredential(merchantId, createMerchantApiCredentialRequest, requestOptions) {
        const localVarPath = "/merchants/{merchantId}/apiCredentials"
            .replace('{' + 'merchantId' + '}', encodeURIComponent(String(merchantId)));
        const resource = new managementResource_1.default(this, localVarPath);
        const request = models_1.ObjectSerializer.serialize(createMerchantApiCredentialRequest, "CreateMerchantApiCredentialRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "CreateApiCredentialResponse");
    }
}
exports.default = APICredentialsMerchantLevelApi;
//# sourceMappingURL=aPICredentialsMerchantLevelApi.js.map