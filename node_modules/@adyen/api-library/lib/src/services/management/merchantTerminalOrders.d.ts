import Service from "../../service";
import { BillingEntitiesResponse, ShippingLocation, ShippingLocationsResponse, TerminalModelsResponse, TerminalOrder, TerminalOrderRequest, TerminalOrdersResponse, TerminalProductsResponse } from "../../typings/management/models";
import { IRequest } from "../../typings/requestOptions";
declare class MerchantTerminalOrders extends Service {
    /**
     * Get a list of billing entities
     */
    listBillingEntities(merchantId: string, requestOptions?: IRequest.Options): Promise<BillingEntitiesResponse>;
    /**
     * Get a list of shipping locations
     */
    listShippingLocations(merchantId: string, requestOptions?: IRequest.Options): Promise<ShippingLocationsResponse>;
    /**
     * Create a shipping location
     */
    createShippingLocation(merchantId: string, request: ShippingLocation): Promise<ShippingLocation>;
    /**
     * Get a list of terminal models
     */
    listTerminalModels(merchantId: string): Promise<TerminalModelsResponse>;
    /**
     * Get a list of orders
     */
    listTerminalOrders(merchantId: string, requestOptions?: IRequest.Options): Promise<TerminalOrdersResponse>;
    /**
     * Create an order
     */
    create(merchantId: string, request: TerminalOrderRequest): Promise<TerminalOrder>;
    /**
     * Get an order
     */
    retrieve(merchantId: string, orderId: string): Promise<TerminalOrder>;
    /**
     * Update an order
     */
    update(merchantId: string, orderId: string, request: TerminalOrderRequest): Promise<TerminalOrder>;
    /**
     * Cancel an order
     */
    cancel(merchantId: string, orderId: string): Promise<TerminalOrder>;
    /**
     * Get a list of terminal products
     */
    listTerminalProducts(merchantId: string, requestOptions?: IRequest.Options): Promise<TerminalProductsResponse>;
}
export default MerchantTerminalOrders;
