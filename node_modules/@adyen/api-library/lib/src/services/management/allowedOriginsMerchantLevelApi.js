"use strict";
/*
 * The version of the OpenAPI document: v1
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const getJsonResponse_1 = __importDefault(require("../../helpers/getJsonResponse"));
const service_1 = __importDefault(require("../../service"));
const managementResource_1 = __importDefault(require("../resource/management/managementResource"));
const models_1 = require("../../typings/management/models");
class AllowedOriginsMerchantLevelApi extends service_1.default {
    /**
     * @summary Delete an allowed origin
     * @param merchantId The unique identifier of the merchant account.
     * @param apiCredentialId Unique identifier of the API credential.
     * @param originId Unique identifier of the allowed origin.
     */
    async deleteAllowedOrigin(merchantId, apiCredentialId, originId, requestOptions) {
        const localVarPath = "/merchants/{merchantId}/apiCredentials/{apiCredentialId}/allowedOrigins/{originId}"
            .replace('{' + 'merchantId' + '}', encodeURIComponent(String(merchantId)))
            .replace('{' + 'apiCredentialId' + '}', encodeURIComponent(String(apiCredentialId)))
            .replace('{' + 'originId' + '}', encodeURIComponent(String(originId)));
        const resource = new managementResource_1.default(this, localVarPath);
        await (0, getJsonResponse_1.default)(resource, "", { ...requestOptions, method: "DELETE" });
    }
    /**
     * @summary Get a list of allowed origins
     * @param merchantId The unique identifier of the merchant account.
     * @param apiCredentialId Unique identifier of the API credential.
     */
    async listAllowedOrigins(merchantId, apiCredentialId, requestOptions) {
        const localVarPath = "/merchants/{merchantId}/apiCredentials/{apiCredentialId}/allowedOrigins"
            .replace('{' + 'merchantId' + '}', encodeURIComponent(String(merchantId)))
            .replace('{' + 'apiCredentialId' + '}', encodeURIComponent(String(apiCredentialId)));
        const resource = new managementResource_1.default(this, localVarPath);
        const response = await (0, getJsonResponse_1.default)(resource, "", { ...requestOptions, method: "GET" });
        return models_1.ObjectSerializer.deserialize(response, "AllowedOriginsResponse");
    }
    /**
     * @summary Get an allowed origin
     * @param merchantId The unique identifier of the merchant account.
     * @param apiCredentialId Unique identifier of the API credential.
     * @param originId Unique identifier of the allowed origin.
     */
    async getAllowedOrigin(merchantId, apiCredentialId, originId, requestOptions) {
        const localVarPath = "/merchants/{merchantId}/apiCredentials/{apiCredentialId}/allowedOrigins/{originId}"
            .replace('{' + 'merchantId' + '}', encodeURIComponent(String(merchantId)))
            .replace('{' + 'apiCredentialId' + '}', encodeURIComponent(String(apiCredentialId)))
            .replace('{' + 'originId' + '}', encodeURIComponent(String(originId)));
        const resource = new managementResource_1.default(this, localVarPath);
        const response = await (0, getJsonResponse_1.default)(resource, "", { ...requestOptions, method: "GET" });
        return models_1.ObjectSerializer.deserialize(response, "AllowedOrigin");
    }
    /**
     * @summary Create an allowed origin
     * @param merchantId The unique identifier of the merchant account.
     * @param apiCredentialId Unique identifier of the API credential.
     * @param allowedOrigin
     */
    async createAllowedOrigin(merchantId, apiCredentialId, allowedOrigin, requestOptions) {
        const localVarPath = "/merchants/{merchantId}/apiCredentials/{apiCredentialId}/allowedOrigins"
            .replace('{' + 'merchantId' + '}', encodeURIComponent(String(merchantId)))
            .replace('{' + 'apiCredentialId' + '}', encodeURIComponent(String(apiCredentialId)));
        const resource = new managementResource_1.default(this, localVarPath);
        const request = models_1.ObjectSerializer.serialize(allowedOrigin, "AllowedOrigin");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "AllowedOriginsResponse");
    }
}
exports.default = AllowedOriginsMerchantLevelApi;
//# sourceMappingURL=allowedOriginsMerchantLevelApi.js.map