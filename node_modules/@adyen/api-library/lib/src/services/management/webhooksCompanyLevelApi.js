"use strict";
/*
 * The version of the OpenAPI document: v1
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const getJsonResponse_1 = __importDefault(require("../../helpers/getJsonResponse"));
const service_1 = __importDefault(require("../../service"));
const managementResource_1 = __importDefault(require("../resource/management/managementResource"));
const models_1 = require("../../typings/management/models");
class WebhooksCompanyLevelApi extends service_1.default {
    /**
     * @summary Remove a webhook
     * @param companyId The unique identifier of the company account.
     * @param webhookId Unique identifier of the webhook configuration.
     */
    async removeWebhook(companyId, webhookId, requestOptions) {
        const localVarPath = "/companies/{companyId}/webhooks/{webhookId}"
            .replace('{' + 'companyId' + '}', encodeURIComponent(String(companyId)))
            .replace('{' + 'webhookId' + '}', encodeURIComponent(String(webhookId)));
        const resource = new managementResource_1.default(this, localVarPath);
        await (0, getJsonResponse_1.default)(resource, "", { ...requestOptions, method: "DELETE" });
    }
    /**
     * @summary List all webhooks
     * @param companyId Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).
     * @param pageNumber The number of the page to fetch.
     * @param pageSize The number of items to have on a page, maximum 100. The default is 10 items on a page.
     */
    async listAllWebhooks(companyId, requestOptions) {
        const localVarPath = "/companies/{companyId}/webhooks"
            .replace('{' + 'companyId' + '}', encodeURIComponent(String(companyId)));
        const resource = new managementResource_1.default(this, localVarPath);
        const response = await (0, getJsonResponse_1.default)(resource, "", { ...requestOptions, method: "GET" });
        return models_1.ObjectSerializer.deserialize(response, "ListWebhooksResponse");
    }
    /**
     * @summary Get a webhook
     * @param companyId Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).
     * @param webhookId Unique identifier of the webhook configuration.
     */
    async getWebhook(companyId, webhookId, requestOptions) {
        const localVarPath = "/companies/{companyId}/webhooks/{webhookId}"
            .replace('{' + 'companyId' + '}', encodeURIComponent(String(companyId)))
            .replace('{' + 'webhookId' + '}', encodeURIComponent(String(webhookId)));
        const resource = new managementResource_1.default(this, localVarPath);
        const response = await (0, getJsonResponse_1.default)(resource, "", { ...requestOptions, method: "GET" });
        return models_1.ObjectSerializer.deserialize(response, "Webhook");
    }
    /**
     * @summary Update a webhook
     * @param companyId The unique identifier of the company account.
     * @param webhookId Unique identifier of the webhook configuration.
     * @param updateCompanyWebhookRequest
     */
    async updateWebhook(companyId, webhookId, updateCompanyWebhookRequest, requestOptions) {
        const localVarPath = "/companies/{companyId}/webhooks/{webhookId}"
            .replace('{' + 'companyId' + '}', encodeURIComponent(String(companyId)))
            .replace('{' + 'webhookId' + '}', encodeURIComponent(String(webhookId)));
        const resource = new managementResource_1.default(this, localVarPath);
        const request = models_1.ObjectSerializer.serialize(updateCompanyWebhookRequest, "UpdateCompanyWebhookRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "PATCH" });
        return models_1.ObjectSerializer.deserialize(response, "Webhook");
    }
    /**
     * @summary Set up a webhook
     * @param companyId Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).
     * @param createCompanyWebhookRequest
     */
    async setUpWebhook(companyId, createCompanyWebhookRequest, requestOptions) {
        const localVarPath = "/companies/{companyId}/webhooks"
            .replace('{' + 'companyId' + '}', encodeURIComponent(String(companyId)));
        const resource = new managementResource_1.default(this, localVarPath);
        const request = models_1.ObjectSerializer.serialize(createCompanyWebhookRequest, "CreateCompanyWebhookRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "Webhook");
    }
    /**
     * @summary Generate an HMAC key
     * @param companyId The unique identifier of the company account.
     * @param webhookId Unique identifier of the webhook configuration.
     */
    async generateHmacKey(companyId, webhookId, requestOptions) {
        const localVarPath = "/companies/{companyId}/webhooks/{webhookId}/generateHmac"
            .replace('{' + 'companyId' + '}', encodeURIComponent(String(companyId)))
            .replace('{' + 'webhookId' + '}', encodeURIComponent(String(webhookId)));
        const resource = new managementResource_1.default(this, localVarPath);
        const response = await (0, getJsonResponse_1.default)(resource, "", { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "GenerateHmacKeyResponse");
    }
    /**
     * @summary Test a webhook
     * @param companyId The unique identifier of the company account.
     * @param webhookId Unique identifier of the webhook configuration.
     * @param testCompanyWebhookRequest
     */
    async testWebhook(companyId, webhookId, testCompanyWebhookRequest, requestOptions) {
        const localVarPath = "/companies/{companyId}/webhooks/{webhookId}/test"
            .replace('{' + 'companyId' + '}', encodeURIComponent(String(companyId)))
            .replace('{' + 'webhookId' + '}', encodeURIComponent(String(webhookId)));
        const resource = new managementResource_1.default(this, localVarPath);
        const request = models_1.ObjectSerializer.serialize(testCompanyWebhookRequest, "TestCompanyWebhookRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "TestWebhookResponse");
    }
}
exports.default = WebhooksCompanyLevelApi;
//# sourceMappingURL=webhooksCompanyLevelApi.js.map