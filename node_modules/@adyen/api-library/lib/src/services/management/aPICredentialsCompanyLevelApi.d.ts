import Service from "../../service";
import { CompanyApiCredential } from '../../typings/management/models';
import { CreateCompanyApiCredentialRequest } from '../../typings/management/models';
import { CreateCompanyApiCredentialResponse } from '../../typings/management/models';
import { ListCompanyApiCredentialsResponse } from '../../typings/management/models';
import { UpdateCompanyApiCredentialRequest } from '../../typings/management/models';
import { IRequest } from "../../typings/requestOptions";
export default class APICredentialsCompanyLevelApi extends Service {
    /**
     * @summary Get a list of API credentials
     * @param companyId The unique identifier of the company account.
     * @param pageNumber The number of the page to fetch.
     * @param pageSize The number of items to have on a page, maximum 100. The default is 10 items on a page.
     */
    listApiCredentials(companyId: string, requestOptions?: IRequest.Options): Promise<ListCompanyApiCredentialsResponse>;
    /**
     * @summary Get an API credential
     * @param companyId The unique identifier of the company account.
     * @param apiCredentialId Unique identifier of the API credential.
     */
    getApiCredential(companyId: string, apiCredentialId: string, requestOptions?: IRequest.Options): Promise<CompanyApiCredential>;
    /**
     * @summary Update an API credential.
     * @param companyId The unique identifier of the company account.
     * @param apiCredentialId Unique identifier of the API credential.
     * @param updateCompanyApiCredentialRequest
     */
    updateApiCredential(companyId: string, apiCredentialId: string, updateCompanyApiCredentialRequest: UpdateCompanyApiCredentialRequest, requestOptions?: IRequest.Options): Promise<CompanyApiCredential>;
    /**
     * @summary Create an API credential.
     * @param companyId The unique identifier of the company account.
     * @param createCompanyApiCredentialRequest
     */
    createApiCredential(companyId: string, createCompanyApiCredentialRequest: CreateCompanyApiCredentialRequest, requestOptions?: IRequest.Options): Promise<CreateCompanyApiCredentialResponse>;
}
