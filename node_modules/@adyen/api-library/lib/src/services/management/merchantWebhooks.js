"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const getJsonResponse_1 = __importDefault(require("../../helpers/getJsonResponse"));
const service_1 = __importDefault(require("../../service"));
const models_1 = require("../../typings/management/models");
const managementResource_1 = __importDefault(require("../resource/management/managementResource"));
class MerchantWebhooks extends service_1.default {
    /**
     * List all webhooks
     */
    async list(merchantId, requestOptions) {
        const resource = new managementResource_1.default(this, `/merchants/${merchantId}/webhooks`);
        const response = await (0, getJsonResponse_1.default)(resource, "", { ...requestOptions, method: "GET" });
        return models_1.ObjectSerializer.deserialize(response, "ListWebhooksResponse");
    }
    /**
     * Set up a webhook
     */
    async create(merchantId, request) {
        const resource = new managementResource_1.default(this, `/merchants/${merchantId}/webhooks`);
        const response = await (0, getJsonResponse_1.default)(resource, request, { method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "Webhook");
    }
    /**
     * Remove a webhook
     */
    async delete(merchantId, webhookId) {
        const resource = new managementResource_1.default(this, `/merchants/${merchantId}/webhooks/${webhookId}`);
        await (0, getJsonResponse_1.default)(resource, "", { method: "DELETE" });
    }
    /**
     * Get a webhook
     */
    async retrieve(merchantId, webhookId) {
        const resource = new managementResource_1.default(this, `/merchants/${merchantId}/webhooks/${webhookId}`);
        const response = await (0, getJsonResponse_1.default)(resource, "", { method: "GET" });
        return models_1.ObjectSerializer.deserialize(response, "Webhook");
    }
    /**
     * Update a webhook
     */
    async update(merchantId, webhookId, request) {
        const resource = new managementResource_1.default(this, `/merchants/${merchantId}/webhooks/${webhookId}`);
        const response = await (0, getJsonResponse_1.default)(resource, request, { method: "PATCH" });
        return models_1.ObjectSerializer.deserialize(response, "Webhook");
    }
    /**
     * Generate an HMAC key
     */
    async generateHmac(merchantId, webhookId) {
        const resource = new managementResource_1.default(this, `/merchants/${merchantId}/webhooks/${webhookId}/generateHmac`);
        const response = await (0, getJsonResponse_1.default)(resource, "", { method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "GenerateHmacKeyResponse");
    }
    /**
     * Test a webhook
     */
    async test(merchantId, webhookId, request) {
        const resource = new managementResource_1.default(this, `/merchants/${merchantId}/webhooks/${webhookId}/test`);
        const response = await (0, getJsonResponse_1.default)(resource, request, { method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "TestWebhookResponse");
    }
}
exports.default = MerchantWebhooks;
//# sourceMappingURL=merchantWebhooks.js.map