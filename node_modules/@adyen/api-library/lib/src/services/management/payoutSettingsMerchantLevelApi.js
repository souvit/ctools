"use strict";
/*
 * The version of the OpenAPI document: v1
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const getJsonResponse_1 = __importDefault(require("../../helpers/getJsonResponse"));
const service_1 = __importDefault(require("../../service"));
const managementResource_1 = __importDefault(require("../resource/management/managementResource"));
const models_1 = require("../../typings/management/models");
class PayoutSettingsMerchantLevelApi extends service_1.default {
    /**
     * @summary Delete a payout setting
     * @param merchantId The unique identifier of the merchant account.
     * @param payoutSettingsId The unique identifier of the payout setting.
     */
    async deletePayoutSetting(merchantId, payoutSettingsId, requestOptions) {
        const localVarPath = "/merchants/{merchantId}/payoutSettings/{payoutSettingsId}"
            .replace('{' + 'merchantId' + '}', encodeURIComponent(String(merchantId)))
            .replace('{' + 'payoutSettingsId' + '}', encodeURIComponent(String(payoutSettingsId)));
        const resource = new managementResource_1.default(this, localVarPath);
        await (0, getJsonResponse_1.default)(resource, "", { ...requestOptions, method: "DELETE" });
    }
    /**
     * @summary Get a list of payout settings
     * @param merchantId The unique identifier of the merchant account.
     */
    async listPayoutSettings(merchantId, requestOptions) {
        const localVarPath = "/merchants/{merchantId}/payoutSettings"
            .replace('{' + 'merchantId' + '}', encodeURIComponent(String(merchantId)));
        const resource = new managementResource_1.default(this, localVarPath);
        const response = await (0, getJsonResponse_1.default)(resource, "", { ...requestOptions, method: "GET" });
        return models_1.ObjectSerializer.deserialize(response, "PayoutSettingsResponse");
    }
    /**
     * @summary Get a payout setting
     * @param merchantId The unique identifier of the merchant account.
     * @param payoutSettingsId The unique identifier of the payout setting.
     */
    async getPayoutSetting(merchantId, payoutSettingsId, requestOptions) {
        const localVarPath = "/merchants/{merchantId}/payoutSettings/{payoutSettingsId}"
            .replace('{' + 'merchantId' + '}', encodeURIComponent(String(merchantId)))
            .replace('{' + 'payoutSettingsId' + '}', encodeURIComponent(String(payoutSettingsId)));
        const resource = new managementResource_1.default(this, localVarPath);
        const response = await (0, getJsonResponse_1.default)(resource, "", { ...requestOptions, method: "GET" });
        return models_1.ObjectSerializer.deserialize(response, "PayoutSettings");
    }
    /**
     * @summary Update a payout setting
     * @param merchantId The unique identifier of the merchant account.
     * @param payoutSettingsId The unique identifier of the payout setting.
     * @param updatePayoutSettingsRequest
     */
    async updatePayoutSetting(merchantId, payoutSettingsId, updatePayoutSettingsRequest, requestOptions) {
        const localVarPath = "/merchants/{merchantId}/payoutSettings/{payoutSettingsId}"
            .replace('{' + 'merchantId' + '}', encodeURIComponent(String(merchantId)))
            .replace('{' + 'payoutSettingsId' + '}', encodeURIComponent(String(payoutSettingsId)));
        const resource = new managementResource_1.default(this, localVarPath);
        const request = models_1.ObjectSerializer.serialize(updatePayoutSettingsRequest, "UpdatePayoutSettingsRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "PATCH" });
        return models_1.ObjectSerializer.deserialize(response, "PayoutSettings");
    }
    /**
     * @summary Add a payout setting
     * @param merchantId The unique identifier of the merchant account.
     * @param payoutSettingsRequest
     */
    async addPayoutSetting(merchantId, payoutSettingsRequest, requestOptions) {
        const localVarPath = "/merchants/{merchantId}/payoutSettings"
            .replace('{' + 'merchantId' + '}', encodeURIComponent(String(merchantId)));
        const resource = new managementResource_1.default(this, localVarPath);
        const request = models_1.ObjectSerializer.serialize(payoutSettingsRequest, "PayoutSettingsRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "PayoutSettings");
    }
}
exports.default = PayoutSettingsMerchantLevelApi;
//# sourceMappingURL=payoutSettingsMerchantLevelApi.js.map