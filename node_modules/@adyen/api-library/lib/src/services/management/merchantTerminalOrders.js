"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const getJsonResponse_1 = __importDefault(require("../../helpers/getJsonResponse"));
const service_1 = __importDefault(require("../../service"));
const models_1 = require("../../typings/management/models");
const managementResource_1 = __importDefault(require("../resource/management/managementResource"));
class MerchantTerminalOrders extends service_1.default {
    /**
     * Get a list of billing entities
     */
    async listBillingEntities(merchantId, requestOptions) {
        const resource = new managementResource_1.default(this, `/merchants/${merchantId}/billingEntities`);
        const response = await (0, getJsonResponse_1.default)(resource, "", { ...requestOptions, method: "GET" });
        return models_1.ObjectSerializer.deserialize(response, "BillingEntitiesResponse");
    }
    /**
     * Get a list of shipping locations
     */
    async listShippingLocations(merchantId, requestOptions) {
        const resource = new managementResource_1.default(this, `/merchants/${merchantId}/shippingLocations`);
        const response = await (0, getJsonResponse_1.default)(resource, "", { ...requestOptions, method: "GET" });
        return models_1.ObjectSerializer.deserialize(response, "ShippingLocationsResponse");
    }
    /**
     * Create a shipping location
     */
    async createShippingLocation(merchantId, request) {
        const resource = new managementResource_1.default(this, `/merchants/${merchantId}/shippingLocations`);
        const response = await (0, getJsonResponse_1.default)(resource, request, { method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "ShippingLocation");
    }
    /**
     * Get a list of terminal models
     */
    async listTerminalModels(merchantId) {
        const resource = new managementResource_1.default(this, `/merchants/${merchantId}/terminalModels`);
        const response = await (0, getJsonResponse_1.default)(resource, "", { method: "GET" });
        return models_1.ObjectSerializer.deserialize(response, "TerminalModelsResponse");
    }
    /**
     * Get a list of orders
     */
    async listTerminalOrders(merchantId, requestOptions) {
        const resource = new managementResource_1.default(this, `/merchants/${merchantId}/terminalOrders`);
        const response = await (0, getJsonResponse_1.default)(resource, "", { ...requestOptions, method: "GET" });
        return models_1.ObjectSerializer.deserialize(response, "TerminalOrdersResponse");
    }
    /**
     * Create an order
     */
    async create(merchantId, request) {
        const resource = new managementResource_1.default(this, `/merchants/${merchantId}/terminalOrders`);
        const response = await (0, getJsonResponse_1.default)(resource, request, { method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "TerminalOrder");
    }
    /**
     * Get an order
     */
    async retrieve(merchantId, orderId) {
        const resource = new managementResource_1.default(this, `/merchants/${merchantId}/terminalOrders/${orderId}`);
        const response = await (0, getJsonResponse_1.default)(resource, "", { method: "GET" });
        return models_1.ObjectSerializer.deserialize(response, "TerminalOrder");
    }
    /**
     * Update an order
     */
    async update(merchantId, orderId, request) {
        const resource = new managementResource_1.default(this, `/merchants/${merchantId}/terminalOrders/${orderId}`);
        const response = await (0, getJsonResponse_1.default)(resource, request, { method: "PATCH" });
        return models_1.ObjectSerializer.deserialize(response, "TerminalOrder");
    }
    /**
     * Cancel an order
     */
    async cancel(merchantId, orderId) {
        const resource = new managementResource_1.default(this, `/merchants/${merchantId}/terminalOrders/${orderId}/cancel`);
        const response = await (0, getJsonResponse_1.default)(resource, "", { method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "TerminalOrder");
    }
    /**
     * Get a list of terminal products
     */
    async listTerminalProducts(merchantId, requestOptions) {
        const resource = new managementResource_1.default(this, `/merchants/${merchantId}/terminalProducts`);
        const response = await (0, getJsonResponse_1.default)(resource, "", { ...requestOptions, method: "GET" });
        return models_1.ObjectSerializer.deserialize(response, "TerminalProductsResponse");
    }
}
exports.default = MerchantTerminalOrders;
//# sourceMappingURL=merchantTerminalOrders.js.map