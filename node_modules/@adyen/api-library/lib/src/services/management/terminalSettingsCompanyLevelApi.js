"use strict";
/*
 * The version of the OpenAPI document: v1
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const getJsonResponse_1 = __importDefault(require("../../helpers/getJsonResponse"));
const service_1 = __importDefault(require("../../service"));
const managementResource_1 = __importDefault(require("../resource/management/managementResource"));
const models_1 = require("../../typings/management/models");
class TerminalSettingsCompanyLevelApi extends service_1.default {
    /**
     * @summary Get the terminal logo
     * @param companyId The unique identifier of the company account.
     * @param model The terminal model. Possible values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T.
     */
    async getTerminalLogo(companyId, requestOptions) {
        const localVarPath = "/companies/{companyId}/terminalLogos"
            .replace('{' + 'companyId' + '}', encodeURIComponent(String(companyId)));
        const resource = new managementResource_1.default(this, localVarPath);
        const response = await (0, getJsonResponse_1.default)(resource, "", { ...requestOptions, method: "GET" });
        return models_1.ObjectSerializer.deserialize(response, "Logo");
    }
    /**
     * @summary Get terminal settings
     * @param companyId The unique identifier of the company account.
     */
    async getTerminalSettings(companyId, requestOptions) {
        const localVarPath = "/companies/{companyId}/terminalSettings"
            .replace('{' + 'companyId' + '}', encodeURIComponent(String(companyId)));
        const resource = new managementResource_1.default(this, localVarPath);
        const response = await (0, getJsonResponse_1.default)(resource, "", { ...requestOptions, method: "GET" });
        return models_1.ObjectSerializer.deserialize(response, "TerminalSettings");
    }
    /**
     * @summary Update the terminal logo
     * @param companyId The unique identifier of the company account.
     * @param model The terminal model. Possible values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T.
     * @param logo
     */
    async updateTerminalLogo(companyId, logo, requestOptions) {
        const localVarPath = "/companies/{companyId}/terminalLogos"
            .replace('{' + 'companyId' + '}', encodeURIComponent(String(companyId)));
        const resource = new managementResource_1.default(this, localVarPath);
        const request = models_1.ObjectSerializer.serialize(logo, "Logo");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "PATCH" });
        return models_1.ObjectSerializer.deserialize(response, "Logo");
    }
    /**
     * @summary Update terminal settings
     * @param companyId The unique identifier of the company account.
     * @param terminalSettings
     */
    async updateTerminalSettings(companyId, terminalSettings, requestOptions) {
        const localVarPath = "/companies/{companyId}/terminalSettings"
            .replace('{' + 'companyId' + '}', encodeURIComponent(String(companyId)));
        const resource = new managementResource_1.default(this, localVarPath);
        const request = models_1.ObjectSerializer.serialize(terminalSettings, "TerminalSettings");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "PATCH" });
        return models_1.ObjectSerializer.deserialize(response, "TerminalSettings");
    }
}
exports.default = TerminalSettingsCompanyLevelApi;
//# sourceMappingURL=terminalSettingsCompanyLevelApi.js.map